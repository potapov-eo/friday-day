[{"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a3-recoveryPassword\\RecoveryPassword.tsx":"1","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs-reduser.ts":"2","C:\\project\\friday-day\\src\\n1-main\\m3-dal\\instance.ts":"3","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards-reducer.ts":"4","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a2-register\\register-reducer.ts":"5","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards.tsx":"6","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a3-recoveryPassword\\recoveryPassword-reducer.ts":"7"},{"size":2947,"mtime":1613741288400,"results":"8","hashOfConfig":"9"},{"size":7495,"mtime":1613741288401,"results":"10","hashOfConfig":"9"},{"size":2894,"mtime":1613742054571,"results":"11","hashOfConfig":"9"},{"size":6193,"mtime":1613742632382,"results":"12","hashOfConfig":"9"},{"size":1484,"mtime":1613401780642,"results":"13","hashOfConfig":"9"},{"size":3147,"mtime":1613749125482,"results":"14","hashOfConfig":"9"},{"size":1686,"mtime":1613048460430,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1txihgw",{"filePath":"18","messages":"19","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a3-recoveryPassword\\RecoveryPassword.tsx",["31"],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs-reduser.ts",["32","33","34","35","36","37","38"],"C:\\project\\friday-day\\src\\n1-main\\m3-dal\\instance.ts",[],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards-reducer.ts",["39","40","41","42","43","44","45","46","47","48","49","50"],"import {CardsAPI, getCardPacksDataType, getCardsDataType} from \"../../n1-main/m3-dal/instance\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n    paginationCards: {\r\n        page: 1,\r\n        pageCount: 2,\r\n        cardAnswer: '',\r\n        cardQuestion: '',\r\n        cardsPack_id: '',\r\n        min: 0,\r\n        max: 0,\r\n        sortCards: ''\r\n    },\r\n    totalCardsCount: 0\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-CARDS':\r\n            return {...state, cards: action.cards}\r\n        case \"SET-TOTAL-CADRS-COUNT\":\r\n            return {...state, totalCardsCount: action.packsCount}\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, paginationCards: {...state.paginationCards, page: action.currentPage}}\r\n        case \"SET-ID\":\r\n            return {...state, paginationCards: {...state.paginationCards, cardsPack_id: action.id}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\n\r\nexport const setCardAC = (cards: Array<CardType>) => ({type: 'SET-CARDS', cards} as const)\r\nexport const setTotalCardsCountAC = (packsCount: number) => ({type: \"SET-TOTAL-CADRS-COUNT\", packsCount} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: 'SET-CURRENT-PAGE', currentPage} as const)\r\nexport const setCurrentIdAC = (id: string) => ({type: 'SET-ID', id} as const)\r\n\r\n//TC\r\n\r\n\r\nexport const getCardTC = () =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n\r\n            const paginationData = getState().cards.paginationCards\r\n            const response = <AxiosResponse<GetCardsResponseType>>await CardsAPI.getCards(paginationData)\r\n            const cards = response.data.cards\r\n\r\n            dispatch(setTotalCardsCountAC(response.data.cardsTotalCount))\r\n            dispatch(setCardAC(cards))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n\r\n            dispatch(setAppErrorAC(error))\r\n        }\r\n    }\r\nexport const addCardTC = (cardsPack_id: string) =>\r\n    async (dispatch: Dispatch , getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n\r\n            const addResponse = <AxiosResponse<any>>await CardsAPI.createCard(cardsPack_id)\r\n            const paginationData = getState().cards.paginationCards\r\n            const response = <AxiosResponse<GetCardsResponseType>>await CardsAPI.getCards(paginationData)\r\n            const cards = response.data.cards\r\n            dispatch(setCardAC(cards))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n\r\n            dispatch(setAppErrorAC(error))\r\n        }\r\n    }\r\nexport const removeCardTC = (cardsPack_id: string, cardId: string) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            const removeResponse = <AxiosResponse<any>>await CardsAPI.deleteCard(cardId)\r\n            const paginationData = getState().cards.paginationCards\r\n            const response = <AxiosResponse<GetCardsResponseType>>await CardsAPI.getCards(paginationData)\r\n            const cards = response.data.cards\r\n            dispatch(setCardAC(cards))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n\r\n            dispatch(setAppErrorAC(error))\r\n        }\r\n    }\r\nexport const updateCardTC = (cardsPack_id: string, cardId: string) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            const removeResponse = <AxiosResponse<any>>await CardsAPI.updateCard(cardId)\r\n\r\n            const paginationData = getState().cards.paginationCards\r\n            const response = <AxiosResponse<GetCardsResponseType>>await CardsAPI.getCards(paginationData)\r\n            const cards = response.data.cards\r\n            dispatch(setCardAC(cards))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n\r\n            dispatch(setAppErrorAC(error))\r\n        }\r\n    }\r\ntype ActionsType = ReturnType<typeof setCardAC>\r\n    | ReturnType<typeof setTotalCardsCountAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setCurrentIdAC>\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    cardsTotalCount: number\r\n    minGrade: number\r\n    token: string\r\n    tokenDeathTime: Date\r\n}\r\nexport type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    comments: string\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    answerImg: string\r\n    questionImg: string\r\n    questionVideo: string\r\n}\r\n","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a2-register\\register-reducer.ts",[],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards.tsx",["51","52"],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a3-recoveryPassword\\recoveryPassword-reducer.ts",[],{"ruleId":"53","severity":1,"message":"54","line":54,"column":12,"nodeType":"55","messageId":"56","endLine":54,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":64,"column":30,"nodeType":"59","messageId":"60","endLine":64,"endColumn":114},{"ruleId":"53","severity":1,"message":"61","line":91,"column":19,"nodeType":"55","messageId":"56","endLine":91,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":93,"column":33,"nodeType":"59","messageId":"60","endLine":93,"endColumn":117},{"ruleId":"53","severity":1,"message":"62","line":112,"column":19,"nodeType":"55","messageId":"56","endLine":112,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":114,"column":33,"nodeType":"59","messageId":"60","endLine":114,"endColumn":117},{"ruleId":"53","severity":1,"message":"63","line":132,"column":19,"nodeType":"55","messageId":"56","endLine":132,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":134,"column":33,"nodeType":"59","messageId":"60","endLine":134,"endColumn":117},{"ruleId":"53","severity":1,"message":"64","line":1,"column":19,"nodeType":"55","messageId":"56","endLine":1,"endColumn":39},{"ruleId":"53","severity":1,"message":"65","line":1,"column":41,"nodeType":"55","messageId":"56","endLine":1,"endColumn":57},{"ruleId":"57","severity":1,"message":"66","line":56,"column":30,"nodeType":"59","messageId":"60","endLine":56,"endColumn":106},{"ruleId":"53","severity":1,"message":"67","line":77,"column":19,"nodeType":"55","messageId":"56","endLine":77,"endColumn":30},{"ruleId":"57","severity":1,"message":"68","line":77,"column":33,"nodeType":"59","messageId":"60","endLine":77,"endColumn":92},{"ruleId":"57","severity":1,"message":"66","line":79,"column":30,"nodeType":"59","messageId":"60","endLine":79,"endColumn":106},{"ruleId":"53","severity":1,"message":"69","line":97,"column":19,"nodeType":"55","messageId":"56","endLine":97,"endColumn":33},{"ruleId":"57","severity":1,"message":"68","line":97,"column":36,"nodeType":"59","messageId":"60","endLine":97,"endColumn":89},{"ruleId":"57","severity":1,"message":"66","line":99,"column":30,"nodeType":"59","messageId":"60","endLine":99,"endColumn":106},{"ruleId":"53","severity":1,"message":"69","line":117,"column":19,"nodeType":"55","messageId":"56","endLine":117,"endColumn":33},{"ruleId":"57","severity":1,"message":"68","line":117,"column":36,"nodeType":"59","messageId":"60","endLine":117,"endColumn":89},{"ruleId":"57","severity":1,"message":"66","line":120,"column":30,"nodeType":"59","messageId":"60","endLine":120,"endColumn":106},{"ruleId":"53","severity":1,"message":"70","line":26,"column":11,"nodeType":"55","messageId":"56","endLine":26,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":39,"column":8,"nodeType":"73","endLine":39,"endColumn":15,"suggestions":"74"},"@typescript-eslint/no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/consistent-type-assertions","Use 'as AxiosResponse<getCardPacksResponseType>' instead of '<AxiosResponse<getCardPacksResponseType>>'.","TSTypeAssertion","as","'createResponse' is assigned a value but never used.","'deleteResponse' is assigned a value but never used.","'updateResponse' is assigned a value but never used.","'getCardPacksDataType' is defined but never used.","'getCardsDataType' is defined but never used.","Use 'as AxiosResponse<GetCardsResponseType>' instead of '<AxiosResponse<GetCardsResponseType>>'.","'addResponse' is assigned a value but never used.","Use 'as AxiosResponse<any>' instead of '<AxiosResponse<any>>'.","'removeResponse' is assigned a value but never used.","'getCardsData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["75"],{"desc":"76","fix":"77"},"Update the dependencies array to be: [dispatch, token]",{"range":"78","text":"79"},[2127,2134],"[dispatch, token]"]