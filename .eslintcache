[{"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\Pack.tsx":"1","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs-reduser.ts":"2","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards-reducer.ts":"3","C:\\project\\friday-day\\src\\n1-main\\m3-dal\\instance.ts":"4","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards.tsx":"5","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs.tsx":"6","C:\\project\\friday-day\\src\\n1-main\\m2-bll\\store.ts":"7","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a3-recoveryPassword\\RecoveryPassword.tsx":"8","C:\\project\\friday-day\\src\\n2-features\\f2-profile\\Profile.tsx":"9","C:\\project\\friday-day\\src\\n2-features\\f6-learn\\Learn.tsx":"10","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\Header.tsx":"11","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\App.tsx":"12","C:\\project\\friday-day\\src\\n1-main\\m2-bll\\app-reduser.ts":"13","C:\\project\\friday-day\\src\\index.tsx":"14","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a4-newPassword\\NewPassword.tsx":"15","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\auth-reducer.ts":"16","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a1-login\\LoginFormik.tsx":"17","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a2-register\\Register.tsx":"18","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Paginator\\Paginator.tsx":"19","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SuperButton\\SuperButton.tsx":"20","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\headings\\Headings.tsx":"21","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SortButtons\\SortPackButton.tsx":"22","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SortButtons\\SortCardButton.tsx":"23","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\cardsHeading\\CardsHeadings.tsx":"24","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\card\\Card.tsx":"25","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Modal\\AddCardForm\\AddCardForm.tsx":"26","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\routes\\Routes.tsx":"27","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Preloder\\Preloader.tsx":"28","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\ErrorSnackBar\\ErrorSnackBar.tsx":"29","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\burgerNav\\burgerNav.tsx":"30","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\nav\\nav.tsx":"31","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\authorizedNav\\AuthorizedNav.tsx":"32","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\authorizedNav\\NotAuthorizedNav.tsx":"33","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\activeColumnPack\\activeColumnPack.tsx":"34"},{"size":3181,"mtime":1615737904905,"results":"35","hashOfConfig":"36"},{"size":5376,"mtime":1614609571722,"results":"37","hashOfConfig":"36"},{"size":5480,"mtime":1614609571731,"results":"38","hashOfConfig":"36"},{"size":3038,"mtime":1614461194633,"results":"39","hashOfConfig":"36"},{"size":3791,"mtime":1614609970017,"results":"40","hashOfConfig":"36"},{"size":5551,"mtime":1615652572882,"results":"41","hashOfConfig":"36"},{"size":702,"mtime":1614459746205,"results":"42","hashOfConfig":"36"},{"size":3035,"mtime":1614461050378,"results":"43","hashOfConfig":"36"},{"size":1410,"mtime":1614609156346,"results":"44","hashOfConfig":"36"},{"size":3902,"mtime":1614524242791,"results":"45","hashOfConfig":"36"},{"size":493,"mtime":1615714962268,"results":"46","hashOfConfig":"36"},{"size":1346,"mtime":1614459950312,"results":"47","hashOfConfig":"36"},{"size":2777,"mtime":1614609571707,"results":"48","hashOfConfig":"36"},{"size":683,"mtime":1614338605106,"results":"49","hashOfConfig":"36"},{"size":3146,"mtime":1614606202954,"results":"50","hashOfConfig":"36"},{"size":5129,"mtime":1614609571715,"results":"51","hashOfConfig":"36"},{"size":3110,"mtime":1614460297239,"results":"52","hashOfConfig":"36"},{"size":3726,"mtime":1614460692103,"results":"53","hashOfConfig":"36"},{"size":1723,"mtime":1614462263222,"results":"54","hashOfConfig":"36"},{"size":1018,"mtime":1614462521117,"results":"55","hashOfConfig":"36"},{"size":1286,"mtime":1615736575881,"results":"56","hashOfConfig":"36"},{"size":1025,"mtime":1614508535721,"results":"57","hashOfConfig":"36"},{"size":999,"mtime":1614511057923,"results":"58","hashOfConfig":"36"},{"size":1276,"mtime":1614609571735,"results":"59","hashOfConfig":"36"},{"size":2758,"mtime":1614523658138,"results":"60","hashOfConfig":"36"},{"size":2038,"mtime":1614541459073,"results":"61","hashOfConfig":"36"},{"size":2420,"mtime":1614197631866,"results":"62","hashOfConfig":"36"},{"size":302,"mtime":1613125025867,"results":"63","hashOfConfig":"36"},{"size":666,"mtime":1612782259982,"results":"64","hashOfConfig":"36"},{"size":1608,"mtime":1615732072473,"results":"65","hashOfConfig":"36"},{"size":1147,"mtime":1615714946142,"results":"66","hashOfConfig":"36"},{"size":884,"mtime":1615714080634,"results":"67","hashOfConfig":"36"},{"size":638,"mtime":1615714333722,"results":"68","hashOfConfig":"36"},{"size":1772,"mtime":1615721394022,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1txihgw",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\Pack.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs-reduser.ts",[],["142","143"],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards-reducer.ts",["144"],"import {CardsAPI} from \"../../n1-main/m3-dal/instance\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {valueType} from \"../../n1-main/m1-ui/common/Modal/AddCardForm/AddCardForm\";\r\nimport {getCards, handleResponseError} from \"../../n1-main/m2-bll/common/HelperFunctions\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n    paginationCards: {\r\n        page: 1,\r\n        pageCount: 3,\r\n        cardAnswer: '',\r\n        cardQuestion: '',\r\n        cardsPack_id: '',\r\n        min: 0,\r\n        max: 6,\r\n        sortCards: ''\r\n    },\r\n    totalCardsCount: 0\r\n}\r\n\r\nexport type cardsReducerInitialStateType = typeof initialState\r\n\r\nexport const cardsReducer = (state: cardsReducerInitialStateType = initialState, action: ActionsType): cardsReducerInitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_CARDS':\r\n            return {...state, cards: action.cards}\r\n        case \"SET_TOTAL_CARDS_COUNT\":\r\n            return {...state, totalCardsCount: action.packsCount}\r\n        case 'SET_PAGINATION_CARD_PROPERTY':\r\n            return {...state, paginationCards: {...state.paginationCards, ...action.property}}\r\n        case 'SET_CARD_GRADE':\r\n            const newCards = state.cards.map((card) => card._id === action.card_id ? {\r\n                ...card,\r\n                grade: action.grade\r\n            } : card)\r\n            return {...state, cards: newCards}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\n\r\nexport const setCardsAC = (cards: Array<CardType>) => ({type: 'SET_CARDS', cards} as const)\r\nexport const setTotalCardsCountAC = (packsCount: number) => ({type: \"SET_TOTAL_CARDS_COUNT\", packsCount} as const)\r\nexport const setPaginationCardAC = (property: setPaginationCardType) =>\r\n    ({type: 'SET_PAGINATION_CARD_PROPERTY', property} as const)\r\nexport const setCardGradeAC = (card_id: string, grade: number) => ({type: \"SET_CARD_GRADE\", card_id, grade} as const)\r\n//TC\r\n\r\n\r\nexport const getCardTC = () =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const addCardTC = (cardsPack_id: string, values: { question: string, answer: string }) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n           await CardsAPI.createCard(cardsPack_id, values)\r\n            await getCards(getState, dispatch)\r\n\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const removeCardTC = (cardsPack_id: string, cardId: string) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.deleteCard(cardId)\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const updateCardTC = (cardId: string, value: valueType) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.updateCard(cardId, value.question, value.answer)\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const gradeCardTC = (grade: number, card_id: string) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            const Response = <AxiosResponse<any>>await CardsAPI.gradeCard(grade, card_id)\r\n            const newGrade = Response.data.updatedGrade.grade\r\n            dispatch(setCardGradeAC(card_id, newGrade))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\n\r\ntype ActionsType = ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setTotalCardsCountAC>\r\n    | ReturnType<typeof setPaginationCardAC>\r\n    | ReturnType<typeof setCardGradeAC>\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    cardsTotalCount: number\r\n    minGrade: number\r\n    token: string\r\n    tokenDeathTime: Date\r\n}\r\nexport type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    comments: string\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    answerImg: string\r\n    questionImg: string\r\n    questionVideo: string\r\n}\r\nexport type setPaginationCardType =\r\n    { page: number }\r\n    | { pageCount: number }\r\n    | { cardAnswer: string }\r\n    | { cardQuestion: string }\r\n    | { cardsPack_id: string }\r\n    | { min: number }\r\n    | { max: number }\r\n    | { sortCards: string }\r\nexport type paginationCardsType = {\r\n    page: number\r\n    pageCount: number,\r\n    cardAnswer: string,\r\n    cardQuestion: string,\r\n    cardsPack_id: string,\r\n    min: number,\r\n    max: number,\r\n    sortCards: string\r\n}\r\n","C:\\project\\friday-day\\src\\n1-main\\m3-dal\\instance.ts",[],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards.tsx",["145"],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs.tsx",["146","147"],"C:\\project\\friday-day\\src\\n1-main\\m2-bll\\store.ts",[],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a3-recoveryPassword\\RecoveryPassword.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f2-profile\\Profile.tsx",["148"],"C:\\project\\friday-day\\src\\n2-features\\f6-learn\\Learn.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\Header.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\App.tsx",["149","150"],"C:\\project\\friday-day\\src\\n1-main\\m2-bll\\app-reduser.ts",[],"C:\\project\\friday-day\\src\\index.tsx",[],["151","152"],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a4-newPassword\\NewPassword.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\auth-reducer.ts",["153","154"],"import {Dispatch} from \"redux\";\r\nimport {setAppErrorACType, setAppStatusAC, setAppStatusACType, UserDataType} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {AuthAPI, recoveryPasswordAPI, RegisterAPI} from \"../../n1-main/m3-dal/instance\";\r\nimport {\r\n    getResponseError,\r\n    handleResponseError,\r\n    setResponseData,\r\n    setSuccessfulResponseData\r\n} from \"../../n1-main/m2-bll/common/HelperFunctions\";\r\nimport {setCardPacksAC} from \"../f5-packs/Packs-reduser\";\r\nimport {setCardsAC} from \"../f6-cards/Cards-reducer\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\nconst initialState = {\r\n    recoveryEmail: false, // если true ссылка для восстановления пароля отправлена\r\n    isRegister: false,    // если true  регистрация прошла успешно успешно\r\n    newPassword: false,   // если true  новый пароль введен успешно\r\n    isLoggedIn: false,    // если true  в данный момент залогинены\r\n}\r\nexport type AuthInitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"RECOVERY_EMAIL\":\r\n            return {...state, recoveryEmail: action.value}\r\n        case 'SET_IS_REGISTER':\r\n            return {...state, isRegister: action.value}\r\n        case \"APP_SET_PASSWORD\":\r\n            return {...state, newPassword: action.newPassword}\r\n        case \"SET_IS_LOGGED_IN\":\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const recoveryEmailAC = (value: boolean) => ({type: 'RECOVERY_EMAIL', value} as const)\r\nexport const setIsRegister = (value: boolean) => ({type: 'SET_IS_REGISTER', value} as const)\r\nexport const setPasswordAC = (newPassword: boolean) => ({type: \"APP_SET_PASSWORD\", newPassword} as const)\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({type: 'SET_IS_LOGGED_IN', isLoggedIn} as const)\r\n\r\n\r\nexport const verificationEmailTC = (data: registeredEmailType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await recoveryPasswordAPI.registeredEmail(data)\r\n        dispatch(recoveryEmailAC(true))\r\n        setSuccessfulResponseData(dispatch)\r\n    } catch (e) {\r\n        handleResponseError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const RegisterTC = (data: RegisterParamsType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await RegisterAPI.register(data)\r\n        dispatch(setIsRegister(true))\r\n        setSuccessfulResponseData(dispatch)\r\n    } catch (e) {\r\n        handleResponseError(e, dispatch)\r\n    }\r\n}\r\nexport const setPasswordTC = (data: SetPasswordType) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await recoveryPasswordAPI.setPassword(data)\r\n            dispatch(setPasswordAC(true))\r\n            setSuccessfulResponseData(dispatch)\r\n\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const getMe = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        let response = <AxiosResponse<UserDataType>>await AuthAPI.getAuthMe()\r\n        setResponseData(dispatch, response.data, true)\r\n    } catch (e) {\r\n        dispatch(setAppStatusAC('failed'))\r\n        const error = getResponseError(e)\r\n        console.log(error)\r\n        dispatch(setIsLoggedIn(false))\r\n    }\r\n}\r\nexport const login = (mail: string, password: string, remember_Me: boolean) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            let response = <AxiosResponse<UserDataType>>await AuthAPI.login(mail, password, remember_Me)\r\n            setResponseData(dispatch, response.data, true)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\nexport const logout = () =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await AuthAPI.logout()\r\n            setResponseData(dispatch, null, false)\r\n            dispatch(setCardPacksAC([]))\r\n            dispatch(setCardsAC([]))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n\r\n    }\r\nexport type registeredEmailType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type SetPasswordType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type recoveryEmailACType = ReturnType<typeof recoveryEmailAC>\r\nexport type setIsRegisterACType = ReturnType<typeof setIsRegister>\r\nexport type setPasswordACType = ReturnType<typeof setPasswordAC>\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedIn>\r\ntype ActionsType = recoveryEmailACType\r\n    | setAppStatusACType\r\n    | setAppErrorACType\r\n    | setIsRegisterACType\r\n    | setPasswordACType\r\n    | setIsLoggedInACType","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a1-login\\LoginFormik.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a2-register\\Register.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Paginator\\Paginator.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SuperButton\\SuperButton.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\headings\\Headings.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SortButtons\\SortPackButton.tsx",["155","156"],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SortButtons\\SortCardButton.tsx",["157","158"],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\cardsHeading\\CardsHeadings.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\card\\Card.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Modal\\AddCardForm\\AddCardForm.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\routes\\Routes.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Preloder\\Preloader.tsx",["159"],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\ErrorSnackBar\\ErrorSnackBar.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\burgerNav\\burgerNav.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\nav\\nav.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\authorizedNav\\AuthorizedNav.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\authorizedNav\\NotAuthorizedNav.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\activeColumnPack\\activeColumnPack.tsx",["160","161","162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":101,"column":30,"nodeType":"170","messageId":"171","endLine":101,"endColumn":90},{"ruleId":null,"fatal":true,"severity":2,"message":"172","line":24,"column":77},{"ruleId":"173","severity":1,"message":"174","line":51,"column":8,"nodeType":"175","endLine":51,"endColumn":70,"suggestions":"176"},{"ruleId":"173","severity":1,"message":"177","line":63,"column":8,"nodeType":"175","endLine":63,"endColumn":20,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":26,"column":17,"nodeType":"181","endLine":26,"endColumn":57},{"ruleId":"182","severity":1,"message":"183","line":19,"column":26,"nodeType":"184","messageId":"185","endLine":19,"endColumn":43},{"ruleId":"173","severity":1,"message":"186","line":27,"column":8,"nodeType":"175","endLine":27,"endColumn":10,"suggestions":"187"},{"ruleId":"164","replacedBy":"188"},{"ruleId":"166","replacedBy":"189"},{"ruleId":"168","severity":1,"message":"190","line":79,"column":24,"nodeType":"170","messageId":"171","endLine":79,"endColumn":78},{"ruleId":"168","severity":1,"message":"190","line":92,"column":28,"nodeType":"170","messageId":"171","endLine":92,"endColumn":105},{"ruleId":"191","severity":1,"message":"192","line":20,"column":9,"nodeType":"181","endLine":20,"endColumn":62},{"ruleId":"191","severity":1,"message":"192","line":21,"column":9,"nodeType":"181","endLine":21,"endColumn":64},{"ruleId":"191","severity":1,"message":"192","line":20,"column":9,"nodeType":"181","endLine":20,"endColumn":62},{"ruleId":"191","severity":1,"message":"192","line":21,"column":9,"nodeType":"181","endLine":21,"endColumn":64},{"ruleId":"179","severity":1,"message":"180","line":8,"column":9,"nodeType":"181","endLine":8,"endColumn":58},{"ruleId":"182","severity":1,"message":"193","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"194","line":4,"column":9,"nodeType":"184","messageId":"185","endLine":4,"endColumn":20},{"ruleId":"182","severity":1,"message":"195","line":7,"column":19,"nodeType":"184","messageId":"185","endLine":7,"endColumn":31},{"ruleId":"182","severity":1,"message":"196","line":7,"column":33,"nodeType":"184","messageId":"185","endLine":7,"endColumn":41},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"@typescript-eslint/consistent-type-assertions","Use 'as AxiosResponse<any>' instead of '<AxiosResponse<any>>'.","TSTypeAssertion","as","Parsing error: Identifier expected.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'searchName', and 'user_id'. Either include them or remove the dependency array. Outer scope values like 'setPaginationAC' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["199"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["200"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'setFirstRendering' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'firstRendering'. Either include them or remove the dependency array.",["201"],["197"],["198"],"Use 'as AxiosResponse<UserDataType>' instead of '<AxiosResponse<UserDataType>>'.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useDispatch' is defined but never used.","'removePackTC' is defined but never used.","'updateTC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [setChange, isChange, setIsChange, isLoading, user_id, dispatch, searchName]",{"range":"208","text":"209"},"Update the dependencies array to be: [dispatch, isLoggedIn]",{"range":"210","text":"211"},"Update the dependencies array to be: [dispatch, firstRendering]",{"range":"212","text":"213"},[2595,2657],"[setChange, isChange, setIsChange, isLoading, user_id, dispatch, searchName]",[3067,3079],"[dispatch, isLoggedIn]",[1033,1035],"[dispatch, firstRendering]"]