[{"C:\\project\\friday-day\\src\\index.tsx":"1","C:\\project\\friday-day\\src\\config.ts":"2","C:\\project\\friday-day\\src\\components\\header\\nav\\nav.tsx":"3","C:\\project\\friday-day\\src\\components\\SortButtons\\SortCardButton.tsx":"4","C:\\project\\friday-day\\src\\pages\\404\\Error404.tsx":"5","C:\\project\\friday-day\\src\\pages\\packs\\Packs.tsx":"6","C:\\project\\friday-day\\src\\store\\auth-reduser\\auth-reducer.ts":"7","C:\\project\\friday-day\\src\\store\\cards-reduser\\Cards-reducer.ts":"8","C:\\project\\friday-day\\src\\store\\packs-reduser\\Packs-reduser.ts":"9","C:\\project\\friday-day\\src\\components\\modal\\Modal.tsx":"10","C:\\project\\friday-day\\src\\components\\modal\\AddForm\\AddForm.tsx":"11","C:\\project\\friday-day\\src\\pages\\auth\\register\\Register.tsx":"12","C:\\project\\friday-day\\src\\components\\pack\\Pack.tsx":"13"},{"size":593,"mtime":1617445788802,"results":"14","hashOfConfig":"15"},{"size":86,"mtime":1613568367373,"results":"16","hashOfConfig":"15"},{"size":1122,"mtime":1617444579378,"results":"17","hashOfConfig":"15"},{"size":1000,"mtime":1617444579347,"results":"18","hashOfConfig":"15"},{"size":338,"mtime":1612386566699,"results":"19","hashOfConfig":"15"},{"size":4971,"mtime":1617446622511,"results":"20","hashOfConfig":"15"},{"size":5106,"mtime":1617449703349,"results":"21","hashOfConfig":"15"},{"size":5419,"mtime":1617449703351,"results":"22","hashOfConfig":"15"},{"size":5431,"mtime":1617449703353,"results":"23","hashOfConfig":"15"},{"size":612,"mtime":1617449703329,"results":"24","hashOfConfig":"15"},{"size":1606,"mtime":1617449703326,"results":"25","hashOfConfig":"15"},{"size":3626,"mtime":1617449703333,"results":"26","hashOfConfig":"15"},{"size":3111,"mtime":1617454001667,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1txihgw",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\project\\friday-day\\src\\index.tsx",[],"C:\\project\\friday-day\\src\\config.ts",[],["56","57"],"C:\\project\\friday-day\\src\\components\\header\\nav\\nav.tsx",[],"C:\\project\\friday-day\\src\\components\\SortButtons\\SortCardButton.tsx",["58","59"],"C:\\project\\friday-day\\src\\pages\\404\\Error404.tsx",[],"C:\\project\\friday-day\\src\\pages\\packs\\Packs.tsx",["60","61"],"C:\\project\\friday-day\\src\\store\\auth-reduser\\auth-reducer.ts",["62","63"],"import {Dispatch} from \"redux\";\r\nimport {setAppErrorACType, setAppStatusAC, setAppStatusACType, UserDataType} from \"../app-reduser/app-reduser\";\r\nimport {AuthAPI, recoveryPasswordAPI, RegisterAPI} from \"../../api/instance\";\r\nimport {\r\n    getResponseError,\r\n    handleResponseError,\r\n    setResponseData,\r\n    setSuccessfulResponseData\r\n} from \"../../utils/HelperFunctions\";\r\nimport {setCardPacksAC} from \"../packs-reduser/Packs-reduser\";\r\nimport {setCardsAC} from \"../cards-reduser/Cards-reducer\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\nconst initialState = {\r\n    recoveryEmail: false, // если true ссылка для восстановления пароля отправлена\r\n    isRegister: false,    // если true  регистрация прошла успешно успешно\r\n    newPassword: false,   // если true  новый пароль введен успешно\r\n    isLoggedIn: false,    // если true  в данный момент залогинены\r\n}\r\nexport type AuthInitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"RECOVERY_EMAIL\":\r\n            return {...state, recoveryEmail: action.value}\r\n        case 'SET_IS_REGISTER':\r\n            return {...state, isRegister: action.value}\r\n        case \"APP_SET_PASSWORD\":\r\n            return {...state, newPassword: action.newPassword}\r\n        case \"SET_IS_LOGGED_IN\":\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const recoveryEmailAC = (value: boolean) => ({type: 'RECOVERY_EMAIL', value} as const)\r\nexport const setIsRegister = (value: boolean) => ({type: 'SET_IS_REGISTER', value} as const)\r\nexport const setPasswordAC = (newPassword: boolean) => ({type: \"APP_SET_PASSWORD\", newPassword} as const)\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({type: 'SET_IS_LOGGED_IN', isLoggedIn} as const)\r\n\r\n\r\nexport const verificationEmailTC = (data: registeredEmailType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await recoveryPasswordAPI.registeredEmail(data)\r\n        dispatch(recoveryEmailAC(true))\r\n        setSuccessfulResponseData(dispatch)\r\n    } catch (e) {\r\n        handleResponseError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const RegisterTC = (data: RegisterParamsType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await RegisterAPI.register(data)\r\n        dispatch(setIsRegister(true))\r\n        setSuccessfulResponseData(dispatch)\r\n    } catch (e) {\r\n        handleResponseError(e, dispatch)\r\n    }\r\n}\r\nexport const setPasswordTC = (data: SetPasswordType) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await recoveryPasswordAPI.setPassword(data)\r\n            dispatch(setPasswordAC(true))\r\n            setSuccessfulResponseData(dispatch)\r\n\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const getMe = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        let response = <AxiosResponse<UserDataType>>await AuthAPI.getAuthMe()\r\n        setResponseData(dispatch, response.data, true)\r\n    } catch (e) {\r\n        dispatch(setAppStatusAC('failed'))\r\n        const error = getResponseError(e)\r\n        console.log(error)\r\n        dispatch(setIsLoggedIn(false))\r\n    }\r\n}\r\nexport const login = (mail: string, password: string, remember_Me: boolean) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            let response = <AxiosResponse<UserDataType>>await AuthAPI.login(mail, password, remember_Me)\r\n            setResponseData(dispatch, response.data, true)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\nexport const logout = () =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await AuthAPI.logout()\r\n            setResponseData(dispatch, null, false)\r\n            dispatch(setCardPacksAC([]))\r\n            dispatch(setCardsAC([]))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n\r\n    }\r\nexport type registeredEmailType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type SetPasswordType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type recoveryEmailACType = ReturnType<typeof recoveryEmailAC>\r\nexport type setIsRegisterACType = ReturnType<typeof setIsRegister>\r\nexport type setPasswordACType = ReturnType<typeof setPasswordAC>\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedIn>\r\ntype ActionsType = recoveryEmailACType\r\n    | setAppStatusACType\r\n    | setAppErrorACType\r\n    | setIsRegisterACType\r\n    | setPasswordACType\r\n    | setIsLoggedInACType","C:\\project\\friday-day\\src\\store\\cards-reduser\\Cards-reducer.ts",["64"],"C:\\project\\friday-day\\src\\store\\packs-reduser\\Packs-reduser.ts",["65"],"C:\\project\\friday-day\\src\\components\\modal\\Modal.tsx",[],"C:\\project\\friday-day\\src\\components\\modal\\AddForm\\AddForm.tsx",[],"C:\\project\\friday-day\\src\\pages\\auth\\register\\Register.tsx",[],"C:\\project\\friday-day\\src\\components\\pack\\Pack.tsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":20,"column":9,"nodeType":"72","endLine":20,"endColumn":62},{"ruleId":"70","severity":1,"message":"71","line":21,"column":9,"nodeType":"72","endLine":21,"endColumn":64},{"ruleId":"73","severity":1,"message":"74","line":54,"column":8,"nodeType":"75","endLine":54,"endColumn":70,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":66,"column":8,"nodeType":"75","endLine":66,"endColumn":20,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":79,"column":24,"nodeType":"81","messageId":"82","endLine":79,"endColumn":78},{"ruleId":"79","severity":1,"message":"80","line":92,"column":28,"nodeType":"81","messageId":"82","endLine":92,"endColumn":105},{"ruleId":"79","severity":1,"message":"83","line":101,"column":30,"nodeType":"81","messageId":"82","endLine":101,"endColumn":90},{"ruleId":"84","severity":1,"message":"85","line":1,"column":19,"nodeType":"86","messageId":"87","endLine":1,"endColumn":39},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'searchName', and 'user_id'. Either include them or remove the dependency array. Outer scope values like 'setPaginationAC' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["90"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["91"],"@typescript-eslint/consistent-type-assertions","Use 'as AxiosResponse<UserDataType>' instead of '<AxiosResponse<UserDataType>>'.","TSTypeAssertion","as","Use 'as AxiosResponse<any>' instead of '<AxiosResponse<any>>'.","@typescript-eslint/no-unused-vars","'getCardPacksDataType' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [setChange, isChange, setIsChange, isLoading, user_id, dispatch, searchName]",{"range":"96","text":"97"},"Update the dependencies array to be: [dispatch, isLoggedIn]",{"range":"98","text":"99"},[2507,2569],"[setChange, isChange, setIsChange, isLoading, user_id, dispatch, searchName]",[2830,2842],"[dispatch, isLoggedIn]"]