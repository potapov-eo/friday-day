[{"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\Pack.tsx":"1","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs-reduser.ts":"2","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards-reducer.ts":"3","C:\\project\\friday-day\\src\\n1-main\\m3-dal\\instance.ts":"4","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards.tsx":"5","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs.tsx":"6","C:\\project\\friday-day\\src\\n1-main\\m2-bll\\store.ts":"7","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a3-recoveryPassword\\RecoveryPassword.tsx":"8","C:\\project\\friday-day\\src\\n2-features\\f2-profile\\Profile.tsx":"9","C:\\project\\friday-day\\src\\n2-features\\f6-learn\\Learn.tsx":"10","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\Header.tsx":"11","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\App.tsx":"12","C:\\project\\friday-day\\src\\n1-main\\m2-bll\\app-reduser.ts":"13","C:\\project\\friday-day\\src\\index.tsx":"14","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a4-newPassword\\NewPassword.tsx":"15","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\auth-reducer.ts":"16","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a1-login\\LoginFormik.tsx":"17","C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a2-register\\Register.tsx":"18","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Paginator\\Paginator.tsx":"19","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SuperButton\\SuperButton.tsx":"20","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\headings\\Headings.tsx":"21","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SortButtons\\SortPackButton.tsx":"22","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SortButtons\\SortCardButton.tsx":"23","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\cardsHeading\\CardsHeadings.tsx":"24","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\card\\Card.tsx":"25","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Modal\\AddCardForm\\AddCardForm.tsx":"26","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\routes\\Routes.tsx":"27","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Preloder\\Preloader.tsx":"28","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\ErrorSnackBar\\ErrorSnackBar.tsx":"29","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\burgerNav\\burgerNav.tsx":"30","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\nav\\nav.tsx":"31","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\authorizedNav\\AuthorizedNav.tsx":"32","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\authorizedNav\\NotAuthorizedNav.tsx":"33","C:\\project\\friday-day\\src\\n2-features\\f6-cards\\card\\activeColumnCard\\activeColumnCard.tsx":"34","C:\\project\\friday-day\\src\\reportWebVitals.ts":"35","C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\activeColumnPack\\activeColumnPack.tsx":"36","C:\\project\\friday-day\\src\\n2-features\\f0-test\\test.tsx":"37","C:\\project\\friday-day\\src\\config.ts":"38","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Modal\\AddForm\\AddForm.tsx":"39","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Modal\\BooleanModal\\BooleanForm.tsx":"40"},{"size":3181,"mtime":1615737904905,"results":"41","hashOfConfig":"42"},{"size":5534,"mtime":1615890132657,"results":"43","hashOfConfig":"42"},{"size":5480,"mtime":1614609571731,"results":"44","hashOfConfig":"42"},{"size":3038,"mtime":1614609571710,"results":"45","hashOfConfig":"42"},{"size":4267,"mtime":1615897143775,"results":"46","hashOfConfig":"42"},{"size":5896,"mtime":1615891818152,"results":"47","hashOfConfig":"42"},{"size":702,"mtime":1614459746205,"results":"48","hashOfConfig":"42"},{"size":3035,"mtime":1614609571713,"results":"49","hashOfConfig":"42"},{"size":1410,"mtime":1614609156346,"results":"50","hashOfConfig":"42"},{"size":4024,"mtime":1615897747129,"results":"51","hashOfConfig":"42"},{"size":493,"mtime":1615890132650,"results":"52","hashOfConfig":"42"},{"size":1346,"mtime":1614459950312,"results":"53","hashOfConfig":"42"},{"size":2777,"mtime":1614609571707,"results":"54","hashOfConfig":"42"},{"size":683,"mtime":1614338605106,"results":"55","hashOfConfig":"42"},{"size":3146,"mtime":1614606202954,"results":"56","hashOfConfig":"42"},{"size":5129,"mtime":1614609571715,"results":"57","hashOfConfig":"42"},{"size":3105,"mtime":1615839107985,"results":"58","hashOfConfig":"42"},{"size":3726,"mtime":1614609571712,"results":"59","hashOfConfig":"42"},{"size":1723,"mtime":1614609571697,"results":"60","hashOfConfig":"42"},{"size":625,"mtime":1614609571700,"results":"61","hashOfConfig":"42"},{"size":1286,"mtime":1615736575881,"results":"62","hashOfConfig":"42"},{"size":1025,"mtime":1614508535721,"results":"63","hashOfConfig":"42"},{"size":1021,"mtime":1614609571698,"results":"64","hashOfConfig":"42"},{"size":1344,"mtime":1615890132667,"results":"65","hashOfConfig":"42"},{"size":3535,"mtime":1615890132665,"results":"66","hashOfConfig":"42"},{"size":2038,"mtime":1614541459073,"results":"67","hashOfConfig":"42"},{"size":2420,"mtime":1615894889543,"results":"68","hashOfConfig":"42"},{"size":302,"mtime":1613125025867,"results":"69","hashOfConfig":"42"},{"size":666,"mtime":1612782259982,"results":"70","hashOfConfig":"42"},{"size":1604,"mtime":1615836970505,"results":"71","hashOfConfig":"42"},{"size":1147,"mtime":1615890132655,"results":"72","hashOfConfig":"42"},{"size":885,"mtime":1615837267054,"results":"73","hashOfConfig":"42"},{"size":640,"mtime":1615836393525,"results":"74","hashOfConfig":"42"},{"size":1576,"mtime":1615890132666,"results":"75","hashOfConfig":"42"},{"size":425,"mtime":1610105478288,"results":"76","hashOfConfig":"42"},{"size":1805,"mtime":1615890132661,"results":"77","hashOfConfig":"42"},{"size":466,"mtime":1613568367379,"results":"78","hashOfConfig":"42"},{"size":86,"mtime":1613568367373,"results":"79","hashOfConfig":"42"},{"size":1606,"mtime":1614609571695,"results":"80","hashOfConfig":"42"},{"size":626,"mtime":1614609571697,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1txihgw",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\Pack.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs-reduser.ts",[],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards-reducer.ts",["170"],"import {CardsAPI} from \"../../n1-main/m3-dal/instance\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {valueType} from \"../../n1-main/m1-ui/common/Modal/AddCardForm/AddCardForm\";\r\nimport {getCards, handleResponseError} from \"../../n1-main/m2-bll/common/HelperFunctions\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n    paginationCards: {\r\n        page: 1,\r\n        pageCount: 3,\r\n        cardAnswer: '',\r\n        cardQuestion: '',\r\n        cardsPack_id: '',\r\n        min: 0,\r\n        max: 6,\r\n        sortCards: ''\r\n    },\r\n    totalCardsCount: 0\r\n}\r\n\r\nexport type cardsReducerInitialStateType = typeof initialState\r\n\r\nexport const cardsReducer = (state: cardsReducerInitialStateType = initialState, action: ActionsType): cardsReducerInitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_CARDS':\r\n            return {...state, cards: action.cards}\r\n        case \"SET_TOTAL_CARDS_COUNT\":\r\n            return {...state, totalCardsCount: action.packsCount}\r\n        case 'SET_PAGINATION_CARD_PROPERTY':\r\n            return {...state, paginationCards: {...state.paginationCards, ...action.property}}\r\n        case 'SET_CARD_GRADE':\r\n            const newCards = state.cards.map((card) => card._id === action.card_id ? {\r\n                ...card,\r\n                grade: action.grade\r\n            } : card)\r\n            return {...state, cards: newCards}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\n\r\nexport const setCardsAC = (cards: Array<CardType>) => ({type: 'SET_CARDS', cards} as const)\r\nexport const setTotalCardsCountAC = (packsCount: number) => ({type: \"SET_TOTAL_CARDS_COUNT\", packsCount} as const)\r\nexport const setPaginationCardAC = (property: setPaginationCardType) =>\r\n    ({type: 'SET_PAGINATION_CARD_PROPERTY', property} as const)\r\nexport const setCardGradeAC = (card_id: string, grade: number) => ({type: \"SET_CARD_GRADE\", card_id, grade} as const)\r\n//TC\r\n\r\n\r\nexport const getCardTC = () =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const addCardTC = (cardsPack_id: string, values: { question: string, answer: string }) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n           await CardsAPI.createCard(cardsPack_id, values)\r\n            await getCards(getState, dispatch)\r\n\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const removeCardTC = (cardsPack_id: string, cardId: string) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.deleteCard(cardId)\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const updateCardTC = (cardId: string, value: valueType) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.updateCard(cardId, value.question, value.answer)\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const gradeCardTC = (grade: number, card_id: string) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            const Response = <AxiosResponse<any>>await CardsAPI.gradeCard(grade, card_id)\r\n            const newGrade = Response.data.updatedGrade.grade\r\n            dispatch(setCardGradeAC(card_id, newGrade))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\n\r\ntype ActionsType = ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setTotalCardsCountAC>\r\n    | ReturnType<typeof setPaginationCardAC>\r\n    | ReturnType<typeof setCardGradeAC>\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    cardsTotalCount: number\r\n    minGrade: number\r\n    token: string\r\n    tokenDeathTime: Date\r\n}\r\nexport type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    comments: string\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    answerImg: string\r\n    questionImg: string\r\n    questionVideo: string\r\n}\r\nexport type setPaginationCardType =\r\n    { page: number }\r\n    | { pageCount: number }\r\n    | { cardAnswer: string }\r\n    | { cardQuestion: string }\r\n    | { cardsPack_id: string }\r\n    | { min: number }\r\n    | { max: number }\r\n    | { sortCards: string }\r\nexport type paginationCardsType = {\r\n    page: number\r\n    pageCount: number,\r\n    cardAnswer: string,\r\n    cardQuestion: string,\r\n    cardsPack_id: string,\r\n    min: number,\r\n    max: number,\r\n    sortCards: string\r\n}\r\n",["171","172"],"C:\\project\\friday-day\\src\\n1-main\\m3-dal\\instance.ts",[],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\Cards.tsx",["173"],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\Packs.tsx",["174","175"],"import React, {ChangeEvent, useCallback, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../../src/n1-main/m2-bll/store'\r\nimport {addCardPacksTC, getCardPacksTC, PackType, paginationType, setPaginationAC} from './/Packs-reduser'\r\nimport s from './Packs.module.css'\r\nimport {Pack} from \"./pack/Pack\";\r\nimport {RequestStatusType, UserDataType} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {Paginator} from \"../../n1-main/m1-ui/common/Paginator/Paginator\";\r\nimport {Modal} from '../../n1-main/m1-ui/common/Modal/Modal'\r\nimport {AddForm} from \"../../n1-main/m1-ui/common/Modal/AddForm/AddForm\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../n1-main/m1-ui/routes/Routes\";\r\nimport {Headings} from \"./pack/headings/Headings\";\r\nimport SuperInput from \"../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\n\r\nexport const Packs = (props: { activeModal: boolean, setActiveModal: (activeModal: boolean) => void }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.app.UserData ? state.app.UserData._id : \"\")\r\n    const {status, UserData} = useSelector<AppRootStateType, { status: RequestStatusType, UserData: UserDataType }>\r\n    (state => state.app)\r\n    const {cardPacks, pagination, totalPacksCount} = useSelector<AppRootStateType,\r\n        { cardPacks: Array<PackType>, pagination: paginationType, totalPacksCount: number }>(state => state.packs)\r\n    const {page, user_id} = pagination\r\n    const pageCount =useSelector<AppRootStateType,number>(state => state.packs.pagination.pageCount)\r\n    const [isChange, setIsChange] = useState<boolean>(false)\r\n    const [idTimeout, setIdTimeout] = useState<number>(0)\r\n    const [searchName, setSearchName] = useState<string>(\"\")\r\n    const [activeAddPackModal, setActiveAddPackModal] = useState<boolean>(false)\r\n    const [isMyPackChecked, setIsMyPackChecked] = useState<boolean>(false)\r\n    const isLoading = status === 'loading'\r\n\r\n    const setChange = useCallback(() => {\r\n        clearTimeout(idTimeout)\r\n        const id = window.setTimeout(() => {\r\n            setIsChange(true)\r\n            setIdTimeout(0)\r\n        }, 1500)\r\n        setIdTimeout(id)\r\n    }, [idTimeout])                                                                   // задержка при поиске\r\n\r\n    useEffect(() => {\r\n        if (isChange && !isLoading) {\r\n            dispatch(setPaginationAC({packName: searchName}))\r\n            dispatch(getCardPacksTC())\r\n            setIsChange(false)\r\n        }\r\n        if (user_id) {\r\n            setIsMyPackChecked(true)\r\n        }\r\n    }, [setChange, isChange, setIsChange, setPaginationAC, isLoading])                    //  поиск по имени\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchName(e.currentTarget.value)\r\n        setChange()\r\n    }                                                                   // колбек для изменения текста инпута поиска\r\n\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            dispatch(getCardPacksTC())\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    const change = (e: ChangeEvent<HTMLInputElement>) => {              // колбек для изменения чек-бокса мои колоды\r\n        if (e.currentTarget.checked) {\r\n            setIsMyPackChecked(true)\r\n            dispatch(setPaginationAC({user_id: userId}))\r\n            dispatch(getCardPacksTC())\r\n\r\n        } else {\r\n            setIsMyPackChecked(false)\r\n            dispatch(setPaginationAC({user_id: \"\"}))\r\n            dispatch(getCardPacksTC())\r\n        }\r\n    }\r\n\r\n    const addPack = (newPackName: string) => {\r\n        dispatch(addCardPacksTC(newPackName))\r\n        setActiveAddPackModal(false)\r\n    }\r\n\r\n    const onPageChanged = (pageNumber: number) => {                           // изменение номера страницы пагинатора\r\n        dispatch(setPaginationAC({page: pageNumber}))\r\n        dispatch(getCardPacksTC())\r\n    }\r\n\r\n    if (!UserData) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.table}>\r\n            <h1>Packs</h1>\r\n            <div> my Pack <input checked={isMyPackChecked} type={\"checkbox\"} onChange={change}/></div>\r\n            {/*<div>\r\n                <Paginator currentPage={page} pageSize={pageCount} totalItemsCount={totalPacksCount}\r\n                           portionSize={10}  // пагинатор\r\n                           onPageChanged={onPageChanged}/>\r\n            </div>*/}\r\n\r\n            <div className={s.search}> Pack name search: <SuperInput value={searchName} onChange={onChangeCallback}/></div>\r\n\r\n            {isLoggedIn ? <div className={s.tableString}>\r\n                < Headings setActiveAddPackModal={setActiveAddPackModal}/>\r\n            </div> : <>\r\n            <div>\"you are not authorized\"</div>\r\n            <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}>{\"LOGIN >>> >>> >>> \"}</NavLink>\r\n                </>}\r\n\r\n            {cardPacks.map(pack =>\r\n                <Pack key={pack._id} pack={pack}\r\n                      activeModal={props.activeModal} setActiveModal={props.setActiveModal}/>\r\n            )}\r\n\r\n            <Paginator currentPage={page} pageSize={pageCount} totalItemsCount={totalPacksCount} portionSize={10}\r\n                       onPageChanged={onPageChanged}/>\r\n\r\n            <Modal activeModal={activeAddPackModal} setActiveModal={setActiveAddPackModal}>\r\n                <AddForm addItem={addPack} buttonName={\"ADD PACK\"} itemName={\"pack name\"}\r\n                         text={\"enter the name of the new pack\"}/>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n",["176","177"],"C:\\project\\friday-day\\src\\n1-main\\m2-bll\\store.ts",[],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a3-recoveryPassword\\RecoveryPassword.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f2-profile\\Profile.tsx",["178"],"C:\\project\\friday-day\\src\\n2-features\\f6-learn\\Learn.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\Header.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\App.tsx",["179","180"],"C:\\project\\friday-day\\src\\n1-main\\m2-bll\\app-reduser.ts",[],"C:\\project\\friday-day\\src\\index.tsx",[],["181","182"],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a4-newPassword\\NewPassword.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\auth-reducer.ts",["183","184"],"import {Dispatch} from \"redux\";\r\nimport {setAppErrorACType, setAppStatusAC, setAppStatusACType, UserDataType} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {AuthAPI, recoveryPasswordAPI, RegisterAPI} from \"../../n1-main/m3-dal/instance\";\r\nimport {\r\n    getResponseError,\r\n    handleResponseError,\r\n    setResponseData,\r\n    setSuccessfulResponseData\r\n} from \"../../n1-main/m2-bll/common/HelperFunctions\";\r\nimport {setCardPacksAC} from \"../f5-packs/Packs-reduser\";\r\nimport {setCardsAC} from \"../f6-cards/Cards-reducer\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\nconst initialState = {\r\n    recoveryEmail: false, // если true ссылка для восстановления пароля отправлена\r\n    isRegister: false,    // если true  регистрация прошла успешно успешно\r\n    newPassword: false,   // если true  новый пароль введен успешно\r\n    isLoggedIn: false,    // если true  в данный момент залогинены\r\n}\r\nexport type AuthInitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"RECOVERY_EMAIL\":\r\n            return {...state, recoveryEmail: action.value}\r\n        case 'SET_IS_REGISTER':\r\n            return {...state, isRegister: action.value}\r\n        case \"APP_SET_PASSWORD\":\r\n            return {...state, newPassword: action.newPassword}\r\n        case \"SET_IS_LOGGED_IN\":\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const recoveryEmailAC = (value: boolean) => ({type: 'RECOVERY_EMAIL', value} as const)\r\nexport const setIsRegister = (value: boolean) => ({type: 'SET_IS_REGISTER', value} as const)\r\nexport const setPasswordAC = (newPassword: boolean) => ({type: \"APP_SET_PASSWORD\", newPassword} as const)\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({type: 'SET_IS_LOGGED_IN', isLoggedIn} as const)\r\n\r\n\r\nexport const verificationEmailTC = (data: registeredEmailType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await recoveryPasswordAPI.registeredEmail(data)\r\n        dispatch(recoveryEmailAC(true))\r\n        setSuccessfulResponseData(dispatch)\r\n    } catch (e) {\r\n        handleResponseError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const RegisterTC = (data: RegisterParamsType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await RegisterAPI.register(data)\r\n        dispatch(setIsRegister(true))\r\n        setSuccessfulResponseData(dispatch)\r\n    } catch (e) {\r\n        handleResponseError(e, dispatch)\r\n    }\r\n}\r\nexport const setPasswordTC = (data: SetPasswordType) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await recoveryPasswordAPI.setPassword(data)\r\n            dispatch(setPasswordAC(true))\r\n            setSuccessfulResponseData(dispatch)\r\n\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const getMe = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        let response = <AxiosResponse<UserDataType>>await AuthAPI.getAuthMe()\r\n        setResponseData(dispatch, response.data, true)\r\n    } catch (e) {\r\n        dispatch(setAppStatusAC('failed'))\r\n        const error = getResponseError(e)\r\n        console.log(error)\r\n        dispatch(setIsLoggedIn(false))\r\n    }\r\n}\r\nexport const login = (mail: string, password: string, remember_Me: boolean) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            let response = <AxiosResponse<UserDataType>>await AuthAPI.login(mail, password, remember_Me)\r\n            setResponseData(dispatch, response.data, true)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\nexport const logout = () =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await AuthAPI.logout()\r\n            setResponseData(dispatch, null, false)\r\n            dispatch(setCardPacksAC([]))\r\n            dispatch(setCardsAC([]))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n\r\n    }\r\nexport type registeredEmailType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type SetPasswordType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type recoveryEmailACType = ReturnType<typeof recoveryEmailAC>\r\nexport type setIsRegisterACType = ReturnType<typeof setIsRegister>\r\nexport type setPasswordACType = ReturnType<typeof setPasswordAC>\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedIn>\r\ntype ActionsType = recoveryEmailACType\r\n    | setAppStatusACType\r\n    | setAppErrorACType\r\n    | setIsRegisterACType\r\n    | setPasswordACType\r\n    | setIsLoggedInACType",["185","186"],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a1-login\\LoginFormik.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f1-auth\\a2-register\\Register.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Paginator\\Paginator.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SuperButton\\SuperButton.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\headings\\Headings.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SortButtons\\SortPackButton.tsx",["187","188"],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\SortButtons\\SortCardButton.tsx",["189","190"],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\cardsHeading\\CardsHeadings.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\card\\Card.tsx",["191"],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Modal\\AddCardForm\\AddCardForm.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\routes\\Routes.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Preloder\\Preloader.tsx",["192"],"import React from 'react';\r\nimport style from './Preloader.module.css'\r\nimport preloader from '../images/Infinity-1s-200px.svg'\r\n\r\n\r\nlet Preloader = () => {\r\n    return <div className={style.pre} >\r\n        <img src={preloader}  style={ { height: 200 } }/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\ErrorSnackBar\\ErrorSnackBar.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\burgerNav\\burgerNav.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\nav\\nav.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\authorizedNav\\AuthorizedNav.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\header\\authorizedNav\\NotAuthorizedNav.tsx",[],"C:\\project\\friday-day\\src\\n2-features\\f6-cards\\card\\activeColumnCard\\activeColumnCard.tsx",[],"C:\\project\\friday-day\\src\\reportWebVitals.ts",[],"C:\\project\\friday-day\\src\\n2-features\\f5-packs\\pack\\activeColumnPack\\activeColumnPack.tsx",["193","194","195","196"],"C:\\project\\friday-day\\src\\n2-features\\f0-test\\test.tsx",[],"C:\\project\\friday-day\\src\\config.ts",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Modal\\AddForm\\AddForm.tsx",[],"C:\\project\\friday-day\\src\\n1-main\\m1-ui\\common\\Modal\\BooleanModal\\BooleanForm.tsx",[],{"ruleId":"197","severity":1,"message":"198","line":101,"column":30,"nodeType":"199","messageId":"200","endLine":101,"endColumn":90},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":5,"column":28,"nodeType":"207","messageId":"208","endLine":5,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":52,"column":8,"nodeType":"211","endLine":52,"endColumn":70,"suggestions":"212"},{"ruleId":"209","severity":1,"message":"213","line":64,"column":8,"nodeType":"211","endLine":64,"endColumn":20,"suggestions":"214"},{"ruleId":"201","replacedBy":"215"},{"ruleId":"203","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":26,"column":17,"nodeType":"219","endLine":26,"endColumn":57},{"ruleId":"205","severity":1,"message":"220","line":19,"column":26,"nodeType":"207","messageId":"208","endLine":19,"endColumn":43},{"ruleId":"209","severity":1,"message":"221","line":27,"column":8,"nodeType":"211","endLine":27,"endColumn":10,"suggestions":"222"},{"ruleId":"201","replacedBy":"223"},{"ruleId":"203","replacedBy":"224"},{"ruleId":"197","severity":1,"message":"225","line":79,"column":24,"nodeType":"199","messageId":"200","endLine":79,"endColumn":78},{"ruleId":"197","severity":1,"message":"225","line":92,"column":28,"nodeType":"199","messageId":"200","endLine":92,"endColumn":105},{"ruleId":"201","replacedBy":"226"},{"ruleId":"203","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":20,"column":9,"nodeType":"219","endLine":20,"endColumn":62},{"ruleId":"228","severity":1,"message":"229","line":21,"column":9,"nodeType":"219","endLine":21,"endColumn":64},{"ruleId":"228","severity":1,"message":"229","line":20,"column":9,"nodeType":"219","endLine":20,"endColumn":62},{"ruleId":"228","severity":1,"message":"229","line":21,"column":9,"nodeType":"219","endLine":21,"endColumn":64},{"ruleId":"205","severity":1,"message":"230","line":25,"column":11,"nodeType":"207","messageId":"208","endLine":25,"endColumn":19},{"ruleId":"217","severity":1,"message":"218","line":8,"column":9,"nodeType":"219","endLine":8,"endColumn":58},{"ruleId":"205","severity":1,"message":"231","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":24},{"ruleId":"205","severity":1,"message":"232","line":4,"column":9,"nodeType":"207","messageId":"208","endLine":4,"endColumn":20},{"ruleId":"205","severity":1,"message":"233","line":7,"column":19,"nodeType":"207","messageId":"208","endLine":7,"endColumn":31},{"ruleId":"205","severity":1,"message":"234","line":7,"column":33,"nodeType":"207","messageId":"208","endLine":7,"endColumn":41},"@typescript-eslint/consistent-type-assertions","Use 'as AxiosResponse<any>' instead of '<AxiosResponse<any>>'.","TSTypeAssertion","as","no-native-reassign",["235"],"no-negated-in-lhs",["236"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'searchName', and 'user_id'. Either include them or remove the dependency array. Outer scope values like 'setPaginationAC' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["237"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["238"],["235"],["236"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setFirstRendering' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'firstRendering'. Either include them or remove the dependency array.",["239"],["235"],["236"],"Use 'as AxiosResponse<UserDataType>' instead of '<AxiosResponse<UserDataType>>'.",["235"],["236"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'isMyPack' is assigned a value but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'removePackTC' is defined but never used.","'updateTC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [setChange, isChange, setIsChange, isLoading, user_id, dispatch, searchName]",{"range":"246","text":"247"},"Update the dependencies array to be: [dispatch, isLoggedIn]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch, firstRendering]",{"range":"250","text":"251"},[2769,2831],"[setChange, isChange, setIsChange, isLoading, user_id, dispatch, searchName]",[3241,3253],"[dispatch, isLoggedIn]",[1033,1035],"[dispatch, firstRendering]"]