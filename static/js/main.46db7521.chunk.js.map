{"version":3,"sources":["n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/header/nav/nav.module.css","n2-features/f2-profile/Profile.module.css","n1-main/m1-ui/common/ErrorSnackBar/ErrorSnackBar.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/common/SuperInput/SuperInput.module.css","n1-main/m1-ui/common/Preloder/Preloader.module.css","n1-main/m1-ui/common/images/Infinity-1s-200px.svg","n1-main/m1-ui/common/Preloder/Preloader.tsx","n2-features/f4-404/Error404.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/common/SuperInput/SuperInput.tsx","n1-main/m3-dal/instance.ts","n1-main/m2-bll/app-reduser.ts","n2-features/f1-auth/a1-login/login-reducer.ts","n2-features/f0-test/test.tsx","n2-features/f1-auth/a1-login/LoginFormik.tsx","n2-features/f1-auth/a2-register/register-reducer.ts","n2-features/f1-auth/a2-register/Register.tsx","n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer.ts","n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword.tsx","n2-features/f2-profile/Profile.tsx","n2-features/f1-auth/a4-newPassword/newPassword-reducer.ts","n2-features/f1-auth/a4-newPassword/NewPassword.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/common/ErrorSnackBar/ErrorSnackBar.tsx","n1-main/m1-ui/header/nav/nav.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Preloader","className","style","pre","src","preloader","height","Error404","alt","SuperButton","name","restProps","s","button","SuperInput","input","instance","axios","create","baseURL","withCredentials","AuthAPI","post","email","password","rememberMe","delete","RegisterAPI","data","recoveryPasswordAPI","initialState","status","error","UserData","_id","avatar","publicCardPacksCount","created","updated","isAdmin","verified","isLoggedIn","setAppStatusAC","type","setAppErrorAC","setUserData","userData","setIsLoggedIn","value","getMe","dispatch","a","response","message","Test","useDispatch","useSelector","state","app","useEffect","Login","disable","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","mail","remember_Me","thunk","resetForm","to","PATH","PROFILE","handleSubmit","onChange","handleChange","onBlur","handleBlur","placeholder","touched","color","checked","disabled","isRegister","Register","register","password2","length","LOGIN","registeredEmail","RecoveryPassword","recoveryPassword","from","then","res","success","catch","e","useParams","token","Profile","profile","profileContainer","info","newPassword","setPasswordAC","NewPassword","console","log","resetPasswordToken","HOME","TEST","REGISTER","RECOVERY_PASSWORD","NEW_PASSWORD","Routes","path","exact","render","ErrorSnackBar","props","notification","text","errorMessage","close","onClick","Nav","nav","activeClassName","activeLink","Header","UserName","header","icon","faDAndD","size","burger","href","alert","burgerToggle","nk1","nk2","nk3","margin","fontWeight","fontSize","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","login","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46db7521.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__P8m-Z\",\"burgerToggle\":\"Header_burgerToggle__3gMSP\",\"nk1\":\"Header_nk1__1mUjG\",\"nk3\":\"Header_nk3__2JrMK\",\"nk2\":\"Header_nk2__A8gP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__1K_HG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__AOdLM\",\"profileContainer\":\"Profile_profileContainer__1GNWh\",\"info\":\"Profile_info__bWyEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__N4HPG\",\"text\":\"ErrorSnackBar_text__2glv8\",\"close\":\"ErrorSnackBar_close__1paLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__1JisP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInput_input__1p_BM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre\":\"Preloader_pre__3-i-h\"};","export default __webpack_public_path__ + \"static/media/Infinity-1s-200px.2a677e42.svg\";","import React from 'react';\r\nimport style from './Preloader.module.css'\r\nimport preloader from '../images/Infinity-1s-200px.svg'\r\n\r\n\r\nlet Preloader = () => {\r\n    return <div className={style.pre} >\r\n        <img src={preloader}  style={ { height: 200 } }/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react'\n\n\nexport const Error404 = () => {\n    return (\n        <div className=\"App\">\n            <div>404</div>\n            <img src=\"https://programmist1s.ru/wp-content/uploads/2013/09/Pole-ob'ekta-nedostupno-dlya-zapisi-1S.jpg\"\n                 alt=\"404\"/>\n            <div>Page not found!</div>\n        </div>\n    )\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\nimport './SuperButton.module.css'\n\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n\n    name?:string\n\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        name=\"push\",\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n\n\n    return (\n        <button className={s.button}\n                {...restProps}\n            //  {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        >{name} </button>\n    );\n}\n\nexport default SuperButton;\n","import React, { DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\nimport './SuperInput.module.css'\r\n\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\nname?:string\r\n}\r\n\r\nconst SuperInput: React.FC<SuperButtonPropsType> = (\r\n    {\r\n      \r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n\r\n    return (\r\n        <input {...restProps} className={s.input}\r\n            />\r\n    );\r\n}\r\n\r\nexport default SuperInput;\r\n","import axios from \"axios\";\r\nimport {DEV_VERSION} from \"../../config\";\r\nimport {RegisterParamsType} from \"../../n2-features/f1-auth/a2-register/register-reducer\";\r\nimport {registeredEmailType} from \"../../n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer\";\r\nimport {SetPasswordType} from \"../../n2-features/f1-auth/a4-newPassword/newPassword-reducer\";\r\n\r\nexport const baseURL = !DEV_VERSION\r\n    ? \"http://localhost:7542/2.0\"\r\n    : \"https://neko-back.herokuapp.com/2.0\"\r\nexport const instance = axios.create({baseURL, withCredentials: true,})\r\n\r\n\r\nexport const AuthAPI = {\r\n    getAuthMe() {\r\n        return instance.post(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/me`)\r\n    }\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    register(data: RegisterParamsType) {\r\n        return instance.post(\"/auth/register\", data)\r\n    }\r\n}\r\n\r\nexport const recoveryPasswordAPI = {\r\n    registeredEmail(data: registeredEmailType) {\r\n        return instance.post('/auth/forgot', data)\r\n    },\r\n    setPassword(data: SetPasswordType) {\r\n        return instance.post('/auth/set-new-password', data)\r\n    }\r\n}","import {setIsLoggedIn, setUserData} from \"../../n2-features/f1-auth/a1-login/login-reducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport type UserDataType = {\r\n    _id: string | null\r\n    email: string | null,\r\n    name: string | null,\r\n    avatar: string | null,\r\n    publicCardPacksCount: number | null,\r\n    created: Date | null,\r\n    updated: Date | null,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n} | null\r\nexport type AppInitialStateType = {\r\n    error: string | null\r\n    status: RequestStatusType\r\n    UserData: UserDataType\r\n    isLoggedIn: boolean\r\n\r\n\r\n}\r\nconst initialState: AppInitialStateType = {\r\n    status: 'succeeded',\r\n    error: null,\r\n    UserData: {\r\n        _id: null as string | null,\r\n        email: null as string | null,\r\n        name: null as string | null,\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: null as number | null,\r\n        created: null as Date | null,\r\n        updated: null as Date | null,\r\n        isAdmin: false,\r\n        verified: false, // подтвердил ли почту\r\n        rememberMe: false,\r\n    },\r\n    isLoggedIn: false\r\n\r\n}\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: ActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...(state), status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...(state), error: action.error}\r\n        case \"SET_USER_DATA\":\r\n            return {...state,UserData:action.userData}\r\n        case \"SET_ISLOGGEDIN\":\r\n            return {...state, isLoggedIn: action.value}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAppStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'APP/SET-ERROR', error} as const)\r\n\r\n\r\nexport type setAppStatusACType = ReturnType<typeof setAppStatusAC>\r\nexport type setAppErrorACType = ReturnType<typeof setAppErrorAC>\r\n\r\ntype ActionsType =\r\n    setAppStatusACType\r\n    | setAppErrorACType\r\n    | ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setIsLoggedIn>","import {Dispatch} from 'redux'\r\nimport {AuthAPI} from '../../../n1-main/m3-dal/instance'\r\nimport {setAppErrorAC, setAppStatusAC, UserDataType} from \"../../../n1-main/m2-bll/app-reduser\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst SET_ISLOGGEDIN = 'SET_ISLOGGEDIN'\r\n\r\nconst initialState = {}\r\n\r\nexport const loginReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setUserData = (userData:UserDataType) =>\r\n    ({\r\n        type: SET_USER_DATA, userData\r\n    } as const)\r\n\r\nexport const setIsLoggedIn = (value: boolean) => ({type: SET_ISLOGGEDIN, value} as const)\r\n\r\n//TC\r\n\r\nexport const getMe = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        let response = await AuthAPI.getAuthMe()\r\n\r\n        let userData = response.data\r\n        dispatch(setUserData(userData))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n        dispatch(setIsLoggedIn(true))\r\n\r\n\r\n    } catch (e) {\r\n        dispatch(setAppStatusAC('failed'))\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        dispatch(setAppErrorAC(error))\r\n    }\r\n}\r\n\r\nexport const login = (mail: string, password: string, remember_Me: boolean) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            let response = await AuthAPI.login(mail, password, remember_Me)\r\n            let userData = response.data\r\n            dispatch(setUserData(userData))\r\n            dispatch(setIsLoggedIn(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n\r\n        } catch (e) {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC(error))\r\n        }\r\n    }\r\n\r\nexport const logout = () =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await AuthAPI.logout()\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setIsLoggedIn(false))\r\n            dispatch(setUserData(null ))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC(error))\r\n        }\r\n\r\n    }\r\n\r\n//types\r\ntype ActionsType = | ReturnType<typeof setUserData> | ReturnType<typeof setIsLoggedIn>\r\ntype InitialStateType = typeof initialState\r\n","import React, {useEffect} from 'react'\r\nimport SuperButton from \"../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {Error404} from \"../f4-404/Error404\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {getMe} from \"../f1-auth/a1-login/login-reducer\";\r\n\r\n\r\nexport const Test = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            dispatch(getMe())\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <SuperButton/>\r\n            <SuperButton name={\"xxx\"}/>\r\n            <SuperInput type=\"text\"/>\r\n            <Error404/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport SuperInput from '../../../n1-main/m1-ui/common/SuperInput/SuperInput';\r\nimport SuperButton from '../../../n1-main/m1-ui/common/SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {login} from './login-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useFormik} from 'formik';\r\nimport {AppRootStateType} from '../../../../src/n1-main/m2-bll/store'\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport {RequestStatusType, setAppErrorAC} from \"../../../n1-main/m2-bll/app-reduser\";\r\n\r\n\r\nexport const Login = () => {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const disable = status === 'loading'\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"nya-admin@nya.nya\",\r\n            password: \"1qazxcvBG\",\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Required\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            const thunk = login(values.email, values.password, values.rememberMe)\r\n            dispatch(thunk)\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        dispatch(setAppErrorAC(\"you are already logged in\"))\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>LOG IN</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div><SuperInput name=\"email\" onChange={formik.handleChange} onBlur={formik.handleBlur} type=\"text\"\r\n                                 value={formik.values.email} placeholder={\"Email\"}/></div>\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.email} </div> : null}\r\n                <div><SuperInput name=\"password\" onChange={formik.handleChange} onBlur={formik.handleBlur}\r\n                                 type=\"password\" value={formik.values.password} placeholder={\"Password\"}/></div>\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.password} </div> : null}\r\n                <div><span>Remember me </span><SuperInput name=\"rememberMe\" onChange={formik.handleChange}\r\n                                                          checked={formik.values.rememberMe} type=\"checkbox\"/></div>\r\n                <div><SuperButton disabled={disable} name=\"log in\"/></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n","import {RegisterAPI} from \"../../../n1-main/m3-dal/instance\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    setAppErrorAC,\r\n    setAppErrorACType,\r\n    setAppStatusAC,\r\n    setAppStatusACType\r\n} from \"../../../n1-main/m2-bll/app-reduser\";\r\n\r\n\r\nconst initialState = {\r\n    isRegister: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-IS-REGISTER':\r\n            return {...state, isRegister: action.value}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setIsRegister = (value: boolean) => ({type: 'SET-IS-REGISTER', value} as const)\r\n\r\nexport const RegisterTC = (data: RegisterParamsType) => async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await RegisterAPI.register(data)\r\n        dispatch(setIsRegister(true))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n        dispatch(setAppErrorAC(null))\r\n    } catch (e) {\r\n        dispatch(setAppStatusAC('failed'))\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n\r\n        dispatch(setAppErrorAC(error))\r\n    }\r\n\r\n}\r\n\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setIsRegister> | setAppStatusACType | setAppErrorACType\r\n\r\n","import React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RegisterTC} from \"./register-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport {RequestStatusType, setAppErrorAC} from \"../../../n1-main/m2-bll/app-reduser\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\n\r\nexport const Register = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n    }\r\n    const disable = status === 'loading'\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'potapov.eo@yandex.ru',\r\n            password: 'jekajeka',\r\n            password2: 'jekajeka',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'email Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'password Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Invalid email address';\r\n            } else if (values.password2 !== values.password) {\r\n                errors.password = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n\r\n        onSubmit: values => {\r\n\r\n            /*dispatch(RegisterTC(values))*/\r\n            dispatch(RegisterTC({email: values.email, password: values.password}))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        dispatch(setAppErrorAC(\"you are already logged in\"))\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    if (isRegister) {\r\n\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return <div className=\"App\">\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n           <h1>REGISTRATION</h1> \r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"email\"}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n            </div>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"password\"}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"password2\"}\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password2}\r\n                />\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n            </div>\r\n            <SuperButton disabled={disable} type=\"submit\"/>\r\n\r\n        </form>\r\n\r\n\r\n    </div>\r\n}","import {Dispatch} from 'redux'\r\nimport {recoveryPasswordAPI} from \"../../../n1-main/m3-dal/instance\";\r\nimport {\r\n    setAppErrorAC,\r\n    setAppErrorACType,\r\n    setAppStatusAC,\r\n    setAppStatusACType\r\n} from \"../../../n1-main/m2-bll/app-reduser\";\r\n\r\n\r\nconst initialState = {\r\n    registeredEmail: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoveryPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"VERIFICATION-EMAIL\":\r\n            return {...state, registeredEmail: action.value}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst verificationEmailAC = (value: boolean) => {\r\n    return {type: 'VERIFICATION-EMAIL', value} as const\r\n}\r\n\r\nexport const verificationEmailTC = (data: registeredEmailType) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        return recoveryPasswordAPI.registeredEmail(data).then(res => {\r\n            if (res.data.success) {\r\n                dispatch(verificationEmailAC(true))\r\n            }\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n\r\n            .catch((e) => {\r\n                dispatch(setAppStatusAC('failed'))\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.message + ', more details in the console')\r\n                dispatch(setAppErrorAC(error))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport type registeredEmailType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\n\r\ntype ActionsType = ReturnType<typeof verificationEmailAC> | setAppStatusACType | setAppErrorACType","import React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {verificationEmailTC} from \"./recoveryPassword-reducer\";\r\nimport {RequestStatusType} from \"../../../n1-main/m2-bll/app-reduser\";\r\n\r\nexport const RecoveryPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const registeredEmail = useSelector<AppRootStateType, boolean>(state => state.recoveryPassword.registeredEmail)\r\n\r\n    const from = \"test-front-admin <ai73a@yandex.by>\"\r\n    const message = \"<div>password recovery link:<a href='http://localhost:3000/#/new-password/$token$'>link</a></div>\"\r\n\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        from?: string\r\n        message?: string\r\n    }\r\n    const disable = status === 'loading'\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n\r\n            dispatch(verificationEmailTC({email: values.email, from, message}))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    const {token}: any = useParams()\r\n\r\n    if (registeredEmail) {\r\n        return (\r\n            <div>\r\n                <div>Success!</div>\r\n                <div>Click the link in the message in your email</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return <div className=\"App\">\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n            RecoveryPassword\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"email\"}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n            </div>\r\n\r\n            <SuperButton disabled={disable} type=\"submit\" name='Send'/>\r\n\r\n        </form>\r\n\r\n    </div>\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMe} from \"../f1-auth/a1-login/login-reducer\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../n1-main/m1-ui/routes/Routes\";\r\nimport {UserDataType} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport s from \"./Profile.module.css\";\r\n\r\n\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n    const userData = useSelector<AppRootStateType, UserDataType>(state => state.app.UserData)\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            dispatch(getMe())\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n\r\n    }\r\n     const avatar = \"https://www.gravatar.com/avatar/c37e0453882ec1e1d40bb4387e27b1dc?s=200&r=g&d=mm\"\r\n    return (\r\n\r\n        <div className={s.profile}>\r\n            <h1>PROFILE</h1>\r\n            <div className={s.profileContainer}>\r\n                <img className={s.avatar} src = {avatar}/>\r\n                {/* {userData.avatar} */}\r\n                <div className={s.info}>\r\n                    <div> Name: <span>{userData?userData.name:null}</span></div>\r\n                    <div> Email: <span>{userData?userData.email:null}</span></div>\r\n                    <div>Public Card Packs Count: <span>{userData?userData.publicCardPacksCount:null}</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {setAppErrorACType, setAppStatusAC, setAppStatusACType} from \"../../../n1-main/m2-bll/app-reduser\";\r\nimport {Dispatch} from \"redux\";\r\nimport {recoveryPasswordAPI} from \"../../../n1-main/m3-dal/instance\";\r\n\r\nconst initialState = {\r\n    newPassword: ''\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-PASSWORD\": {\r\n            return {...state, newPassword: action.newPassword}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setPasswordAC = (newPassword: string) => ({type: \"APP/SET-PASSWORD\", newPassword} as const)\r\n\r\nexport const setPasswordTC1 = (data: SetPasswordType) => {\r\n    return (dispatch: Dispatch) => {\r\n        recoveryPasswordAPI.setPassword(data).then(res => dispatch(setPasswordAC(data.password)))\r\n    }\r\n}\r\nexport const setPasswordTC = (data: SetPasswordType) => {\r\n\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        return recoveryPasswordAPI.setPassword(data)\r\n            .then(res => {\r\n                dispatch(setPasswordAC(data.password))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\n\r\nexport type SetPasswordType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setPasswordAC> | setAppStatusACType | setAppErrorACType","import React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {RequestStatusType} from \"../../../n1-main/m2-bll/app-reduser\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {setPasswordTC} from \"./newPassword-reducer\";\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const newPassword = useSelector<AppRootStateType, string>(state => state.newPassword.newPassword)\r\n    type FormikErrorType = {\r\n        password?: string\r\n        resetPasswordToken?: string\r\n    }\r\n\r\n\r\n\r\n    let {token}: any = useParams()\r\n    console.log(token)\r\n\r\n    const disable = status === 'loading'\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n            password2: '',\r\n            resetPasswordToken: (token)\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.password) {\r\n                errors.password = 'password Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'length of passwords should be 7 and more simbols';\r\n            } else if (values.password2 !== values.password) {\r\n                errors.password = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(setPasswordTC({password: values.password, resetPasswordToken: values.resetPasswordToken}))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if (newPassword) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return <div className=\"App\">\r\n        <form onSubmit={formik.handleSubmit}>\r\n            NewPassword\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"password\"}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n            </div>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"confirm password\"}\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password2}\r\n                />\r\n                {formik.touched.password2 && formik.errors.password2 ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.password2}</div> : null}\r\n            </div>\r\n\r\n            <SuperButton disabled={disable} type=\"submit\" name='Send'/>\r\n\r\n        </form>\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Error404} from \"../../../n2-features/f4-404/Error404\";\r\nimport {Test} from \"../../../n2-features/f0-test/test\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/LoginFormik\";\r\nimport {Register} from \"../../../n2-features/f1-auth/a2-register/Register\";\r\nimport {RecoveryPassword} from \"../../../n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword\";\r\nimport {Profile} from \"../../../n2-features/f2-profile/Profile\";\r\nimport {NewPassword} from \"../../../n2-features/f1-auth/a4-newPassword/NewPassword\";\r\n\r\nexport const PATH = {\r\n    HOME: \"/home\",\r\n    TEST: \"/test\",\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    RECOVERY_PASSWORD: \"/recovery-password\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    PROFILE: \"/profile\",\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n\r\n            <Switch>\r\n\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPassword/>}/>\r\n                <Route path={`${PATH.NEW_PASSWORD}/:token`} render={() => <NewPassword/> }/>\r\n                <Route path={PATH.NEW_PASSWORD} exact render={ () => <RecoveryPassword/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import style from './ErrorSnackBar.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../../m2-bll/app-reduser\";\r\n\r\ntype ErrorSnackBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nexport const ErrorSnackBar = (props: ErrorSnackBarPropsType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickHandler = () => dispatch(setAppErrorAC(null))\r\n\r\n    return (\r\n        <div className={style.notification}>\r\n        <div className={style.text}> {props.errorMessage} </div>\r\n        <div className={`${style.close}`}>\r\n            <div className={style.text} onClick={onClickHandler}>X</div>\r\n        </div>\r\n    </div>)\r\n};\r\n\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./nav.module.css\"\r\nimport {PATH} from \"../../routes/Routes\";\r\n\r\nexport const Nav = () => {\r\n    return (\r\n\r\n        <div className={s.nav}>\r\n\r\n\r\n            <span>\r\n                    <NavLink to={PATH.TEST} activeClassName={s.activeLink}>TEST</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}>LOGIN</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.REGISTER} activeClassName={s.activeLink}>REGISTER</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.RECOVERY_PASSWORD} activeClassName={s.activeLink}>RECOVERY_PASSWORD</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.NEW_PASSWORD} activeClassName={s.activeLink}>NEW_PASSWORD</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n                </span>\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./Header.module.css\"\r\nimport {Nav} from \"./nav/nav\";\r\nimport SuperButton from '../../../n1-main/m1-ui/common/SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logout} from '../../../n2-features/f1-auth/a1-login/login-reducer'\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDAndD} from \"@fortawesome/free-brands-svg-icons\"\r\n\r\n\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch()\r\n    const UserName = useSelector<AppRootStateType, string | null>(state =>state.app.UserData? state.app.UserData.name: null)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n\r\n    const logoutOnClick = () => {\r\n        const thunk = logout()\r\n        dispatch(thunk)\r\n    }\r\n    return (\r\n        <div className={s.header}>\r\n            <FontAwesomeIcon icon={faDAndD} size=\"4x\" /> \r\n             <Nav/>\r\n\r\n           \r\n           <div className={s.burger}>\r\n                <a href=\"\" className={s.a} onClick={()=>{alert(\"menu open\")}}>\r\n                    <span className={s.burgerToggle}>\r\n                        <span className={s.nk1}></span>\r\n                        <span className={s.nk2}></span>\r\n                        <span className={s.nk3}></span>\r\n                    </span>\r\n                </a>\r\n            </div>\r\n            {isLoggedIn && < SuperButton onClick={logoutOnClick} name=\"logout\"/>}\r\n            {isLoggedIn && <div style={{margin: \"10px\", color: \"#e08821\", fontWeight: \"bold\", fontSize: \"20px\"}}> {UserName} </div>}\r\n                    </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from \"../m2-bll/store\";\r\nimport {RequestStatusType} from \"../m2-bll/app-reduser\";\r\nimport Preloader from \"./common/Preloder/Preloader\";\r\nimport {Routes} from \"./routes/Routes\";\r\nimport {ErrorSnackBar} from \"./common/ErrorSnackBar/ErrorSnackBar\";\r\nimport {Header} from \"./header/Header\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Header/>\r\n                {status === 'loading' && <Preloader/>}\r\n                <Routes/>\r\n                {error && <ErrorSnackBar errorMessage={error}/>}\r\n            </HashRouter>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {loginReducer} from \"../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport {registerReducer} from \"../../n2-features/f1-auth/a2-register/register-reducer\";\r\nimport {recoveryPasswordReducer} from \"../../n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer\";\r\nimport {newPasswordReducer} from \"../../n2-features/f1-auth/a4-newPassword/newPassword-reducer\";\r\nimport {appReducer} from \"./app-reduser\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login:loginReducer,\r\n    register:registerReducer,\r\n    recoveryPassword:recoveryPasswordReducer,\r\n    newPassword:newPasswordReducer,\r\n    app:appReducer\r\n\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './n1-main/m1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}