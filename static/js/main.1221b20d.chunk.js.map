{"version":3,"sources":["n2-features/f5-packs/pack/headings/Headings.module.css","n1-main/m1-ui/header/authorizedNav/AuthorizedNav.module.css","n1-main/m1-ui/common/Modal/Modal.module.css","n2-features/f6-learn/Learn.module.css","n2-features/f2-profile/Profile.module.css","n1-main/m1-ui/common/Paginator/Paginator.module.css","n1-main/m1-ui/common/ErrorSnackBar/ErrorSnackBar.module.css","n1-main/m1-ui/common/SortButtons/SortButtons.module.css","n1-main/m1-ui/header/burgerNav/burgerNav.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/common/SuperInput/SuperInput.module.css","n1-main/m1-ui/header/nav/nav.module.css","n1-main/m1-ui/common/Preloder/Preloader.module.css","n2-features/f5-packs/Packs.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/images/Infinity-1s-200px.svg","n1-main/m1-ui/common/Preloder/Preloader.tsx","n2-features/f4-404/Error404.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/common/SuperInput/SuperInput.tsx","n2-features/f0-test/test.tsx","n1-main/m2-bll/app-reduser.ts","n1-main/m3-dal/instance.ts","n2-features/f6-cards/Cards-reducer.ts","n2-features/f5-packs/Packs-reduser.ts","n1-main/m2-bll/common/HelperFunctions.ts","n2-features/f1-auth/auth-reducer.ts","n2-features/f1-auth/authSelector.ts","n1-main/m2-bll/appSelector.ts","n2-features/f1-auth/a1-login/LoginFormik.tsx","n2-features/f1-auth/a2-register/Register.tsx","n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword.tsx","n2-features/f2-profile/Profile.tsx","n2-features/f1-auth/a4-newPassword/NewPassword.tsx","n1-main/m1-ui/common/Modal/Modal.tsx","n1-main/m1-ui/common/Modal/BooleanModal/BooleanForm.tsx","n1-main/m1-ui/common/Modal/AddForm/AddForm.tsx","n2-features/f5-packs/pack/activeColumnPack/activeColumnPack.tsx","n2-features/f5-packs/pack/Pack.tsx","n1-main/m1-ui/common/Paginator/Paginator.tsx","n1-main/m1-ui/common/SortButtons/SortPackButton.tsx","n2-features/f5-packs/pack/headings/Headings.tsx","n2-features/f5-packs/packSelector.ts","n2-features/f5-packs/Packs.tsx","n1-main/m1-ui/common/Modal/AddCardForm/AddCardForm.tsx","n2-features/f6-cards/card/activeColumnCard/activeColumnCard.tsx","n2-features/f6-cards/card/Card.tsx","n1-main/m1-ui/common/SortButtons/SortCardButton.tsx","n2-features/f6-cards/cardsHeading/CardsHeadings.tsx","n2-features/f6-cards/cardSelector.ts","n2-features/f6-cards/Cards.tsx","n2-features/f6-learn/Learn.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/common/ErrorSnackBar/ErrorSnackBar.tsx","n1-main/m1-ui/header/authorizedNav/NotAuthorizedNav.tsx","n1-main/m1-ui/header/authorizedNav/AuthorizedNav.tsx","n1-main/m1-ui/header/nav/nav.tsx","n1-main/m1-ui/header/burgerNav/burgerNav.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Preloader","className","style","pre","src","preloader","height","Error404","alt","SuperButton","name","restProps","s","button","SuperInput","input","Test","type","initialState","status","error","UserData","_id","email","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","setAppStatusAC","setAppErrorAC","setPublicCardPacksCountAC","instance","axios","create","baseURL","withCredentials","AuthAPI","post","password","delete","RegisterAPI","data","recoveryPasswordAPI","CardsAPI","paginationData","get","params","newPackName","cardsPack","idCarsPack","id","newNamePack","put","paginationCardsData","cardsPack_id","values","card","cardId","question","answer","grade","card_id","cards","paginationCards","page","pageCount","cardAnswer","cardQuestion","min","max","sortCards","totalCardsCount","setCardsAC","setPaginationCardAC","property","setCardGradeAC","getCardTC","dispatch","getState","a","getCards","handleResponseError","cardPacks","pagination","packName","sortPacks","user_id","totalPacksCount","setCardPacksAC","setPaginationAC","setTotalPacksCountAC","packsCount","getCardPacksTC","getData","getCardPacks","response","currentPage","cardPacksTotalCount","setSuccessfulResponseData","setIsLoggedIn","getResponseError","e","message","cardsTotalCount","setResponseData","userData","isLoggedIn","setUserDataAC","packs","recoveryEmail","isRegister","newPassword","recoveryEmailAC","value","logout","selectorRecoveryEmail","state","auth","selectorIsRegister","selectorNewPassword","selectorIsLoggedIn","selectorStatus","app","selectorUserData","selectorUserId","Login","useSelector","useDispatch","disable","formik","useFormik","initialValues","validate","errors","test","onSubmit","mail","remember_Me","thunk","resetForm","to","PATH","PROFILE","handleSubmit","onChange","handleChange","onBlur","handleBlur","placeholder","touched","color","checked","disabled","Register","password2","length","LOGIN","RecoveryPassword","registeredEmail","from","onClick","Profile","profile","profileContainer","info","NewPassword","token","useParams","resetPasswordToken","Modal","props","activeModal","modal","modalActive","setActiveModal","modalContant","modalContantactive","stopPropagation","children","BooleanForm","React","memo","push","addItemTitle","AddForm","addItem","text","itemName","buttonName","ActiveColumnPack","registerUserId","pack","isMyPack","tableString","setActiveDelPackModal","setActiveUpdatePackModal","CARDS","activeClassName","activeLink","LEARN","Pack","useState","activeDelPackModal","activeUpdatePackModal","isActiveColumnPack","setIsActiveColumnPack","cardsCount","nameBtn","slice","ActiveColumnPack3","ActiveColumnPack2","updateTC","isDel","Paginator","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","portionCount","portionSize","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","filter","p","map","coursor","selectedPage","onPageChanged","SortPackButton","tableSortIcons","param","icon","faSortUp","size","faSortDown","Headings","tableColumnTitle","setActiveAddPackModal","tableColumnTitleHide","selectorCardPacks","selectorTotalPacksCount","selectorPagination","Packs","userId","isChange","setIsChange","idTimeout","setIdTimeout","searchName","setSearchName","activeAddPackModal","isMyPackChecked","setIsMyPackChecked","isLoading","setChange","useCallback","clearTimeout","window","setTimeout","useEffect","table","currentTarget","search","pageNumber","addCardPacksTC","AddCardForm","addCard","ActiveColumnCard","additionalColumn","setActiveDelCardModal","setActiveAddCardModal","Card","activeAddCardModal","updateCardTC","SortCardButton","CardsHeadings","selectorCards","selectorTotalCardsCount","selectorPaginationCards","Cards","find","notAuthorized","PACK","newNumber","Learn","isChecked","setIsChecked","first","setFirst","setCard","getCard","sum","reduce","acc","rand","random","res","newSum","setGrade","Response","newGrade","updatedGrade","g","HOME","TEST","REGISTER","RECOVERY_PASSWORD","NEW_PASSWORD","Routes","path","exact","render","ErrorSnackBar","notification","errorMessage","close","NotAuthorizedNav","burgerNav","burger","NANav","AuthorizedNav","nav","Nav","UserName","userName","BurgerNav","menuIsOpen","setMenuIsOpen","btnName","positionBtn","Header","header","faDAndD","App","firstRendering","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newCards","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1221b20d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Headings_table__1x9eD\",\"tableColumnTitle\":\"Headings_tableColumnTitle__1IK45\",\"tableColumnTitleHide\":\"Headings_tableColumnTitleHide__296xO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"AuthorizedNav_burger__1mkB-\",\"nav\":\"AuthorizedNav_nav__1PyXS\",\"NANav\":\"AuthorizedNav_NANav__3SvMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3RLL0\",\"modalActive\":\"Modal_modalActive__ZE80p\",\"modalContant\":\"Modal_modalContant__2fq7x\",\"modalContantactive\":\"Modal_modalContantactive__3OTnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Learn_page__3ViEZ\",\"cardQuestion\":\"Learn_cardQuestion__2CcQp\",\"cardAnswer\":\"Learn_cardAnswer__1bnwJ\",\"card\":\"Learn_card__1M0YJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__AOdLM\",\"profileContainer\":\"Profile_profileContainer__1GNWh\",\"info\":\"Profile_info__bWyEn\",\"avatar\":\"Profile_avatar__11Ltf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__DEW0s\",\"pageNumber\":\"Paginator_pageNumber__tlVzE\",\"selectedPage\":\"Paginator_selectedPage__2ULFC\",\"coursor\":\"Paginator_coursor__2H2t0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__N4HPG\",\"text\":\"ErrorSnackBar_text__2glv8\",\"close\":\"ErrorSnackBar_close__1paLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableSortIcons\":\"SortButtons_tableSortIcons__3gyjZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"burgerNav_nav__3FWGE\",\"positionBtn\":\"burgerNav_positionBtn__31w9y\",\"burgerNav\":\"burgerNav_burgerNav__293xP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__1JisP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInput_input__1p_BM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__1K_HG\",\"userName\":\"nav_userName__mRcAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre\":\"Preloader_pre__3-i-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Packs_table__2Naa-\",\"tableString\":\"Packs_tableString__mwSXx\",\"search\":\"Packs_search__2cx02\",\"notAuthorized\":\"Packs_notAuthorized__1-_nB\",\"ActiveColumnPack\":\"Packs_ActiveColumnPack__17-2Q\",\"ActiveColumnPack2\":\"Packs_ActiveColumnPack2__2PIaw\",\"ActiveColumnPack3\":\"Packs_ActiveColumnPack3__310A7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__P8m-Z\"};","export default __webpack_public_path__ + \"static/media/Infinity-1s-200px.2a677e42.svg\";","import React from 'react';\r\nimport style from './Preloader.module.css'\r\nimport preloader from '../images/Infinity-1s-200px.svg'\r\n\r\n\r\nlet Preloader = () => {\r\n    return <div className={style.pre} >\r\n        <img src={preloader}  style={ { height: 200 } }/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react'\n\n\nexport const Error404 = () => {\n    return (\n        <div className=\"App\">\n            <div>404</div>\n            <img src=\"https://programmist1s.ru/wp-content/uploads/2013/09/Pole-ob'ekta-nedostupno-dlya-zapisi-1S.jpg\"\n                 alt=\"404\"/>\n            <div>Page not found!</div>\n        </div>\n    )\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\nimport './SuperButton.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n\r\n    name?: string\r\n\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        name = \"push\",\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <button className={s.button}\r\n                {...restProps}\r\n        >{name} </button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\nimport './SuperInput.module.css'\r\n\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n}\r\n\r\nconst SuperInput: React.FC<SuperButtonPropsType> = (\r\n    {\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n\r\n    return (\r\n        <input {...restProps} className={s.input}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperInput;\r\n","import React from 'react'\r\nimport SuperButton from \"../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {Error404} from \"../f4-404/Error404\";\r\n\r\n\r\nexport const Test = () => {\r\n       return (\r\n        <div className=\"App\">\r\n            <SuperButton/>\r\n            <SuperButton name={\"xxx\"}/>\r\n            <SuperInput type=\"text\"/>\r\n            <Error404/>\r\n        </div>\r\n    )\r\n}","export type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState: AppInitialStateType = {\r\n    status: 'succeeded',\r\n    error: null,\r\n    UserData: {\r\n        _id: \"\",\r\n        email: null as string | null,\r\n        name: null as string | null,\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: null as number | null,\r\n        created: null as Date | null,\r\n        updated: null as Date | null,\r\n        isAdmin: false,\r\n        verified: false, // подтвердил ли почту\r\n        rememberMe: false,\r\n    }\r\n}\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: ActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_APP_STATUS':\r\n            return {...state, status: action.status}\r\n        case 'SET_APP_ERROR':\r\n            return {...state, error: action.error}\r\n        case \"SET_USER_DATA\":\r\n            return {...state, UserData: action.userData}\r\n        case \"SET_CARDS_PACK_TOTAL_COUNT\":\r\n            if (state.UserData) {\r\n                return {\r\n                    ...state, UserData: {\r\n                        ...state.UserData, publicCardPacksCount: action.publicCardPacksCount\r\n                    }\r\n                }\r\n            } else return state\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'SET_APP_STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'SET_APP_ERROR', error} as const)\r\nexport const setUserDataAC = (userData: UserDataType) => ({type: 'SET_USER_DATA', userData} as const)\r\nexport const setPublicCardPacksCountAC = (publicCardPacksCount: number | null) =>\r\n    ({type: 'SET_CARDS_PACK_TOTAL_COUNT', publicCardPacksCount} as const)\r\n\r\n\r\n\r\nexport type setAppStatusACType = ReturnType<typeof setAppStatusAC>\r\nexport type setAppErrorACType = ReturnType<typeof setAppErrorAC>\r\nexport type setUserDataACType = ReturnType<typeof setUserDataAC>\r\nexport type setPublicCardPacksCountACType = ReturnType<typeof setPublicCardPacksCountAC>\r\n\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string | null,\r\n    name: string | null,\r\n    avatar: string | null,\r\n    publicCardPacksCount: number | null,\r\n    created: Date | null,\r\n    updated: Date | null,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n} | null\r\n\r\nexport type AppInitialStateType = {\r\n    error: string | null\r\n    status: RequestStatusType\r\n    UserData: UserDataType\r\n    userId?: string\r\n}\r\n\r\ntype ActionsType =\r\n    setAppStatusACType\r\n    | setAppErrorACType\r\n    | setUserDataACType\r\n    | setPublicCardPacksCountACType\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport {DEV_VERSION} from \"../../config\";\r\nimport {registeredEmailType, RegisterParamsType, SetPasswordType} from \"../../n2-features/f1-auth/auth-reducer\";\r\n\r\nexport const baseURL = !DEV_VERSION\r\n    ? \"http://localhost:7542/2.0\"\r\n    : \"https://neko-back.herokuapp.com/2.0\"\r\nexport const instance = axios.create({baseURL, withCredentials: true})\r\n\r\n\r\nexport const AuthAPI = {\r\n    getAuthMe() {\r\n        return instance.post(`auth/me`,)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/me`)\r\n    }\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    register(data: RegisterParamsType) {\r\n        return instance.post(\"/auth/register\", data)\r\n    }\r\n}\r\n\r\nexport const recoveryPasswordAPI = {\r\n    registeredEmail(data: registeredEmailType) {\r\n        return instance.post('/auth/forgot', data)\r\n    },\r\n    setPassword(data: SetPasswordType) {\r\n        return instance.post('/auth/set-new-password', data)\r\n    }\r\n}\r\n\r\nexport const CardsAPI = {\r\n    getCardPacks(paginationData: any) {\r\n        return instance.get(`cards/pack`, {params: paginationData})\r\n    },\r\n\r\n    createCardsPack(newPackName: string) {\r\n        return instance.post(`cards/pack`, {cardsPack: {name: newPackName}})\r\n    },\r\n    deleteCardsPack(idCarsPack: string) {\r\n        return instance.delete(`cards/pack/?id=${idCarsPack}`)\r\n    },\r\n    updateCardsPack(id: string, newNamePack: string) {\r\n        return instance.put(`cards/pack/`, {cardsPack: {_id: id, name: newNamePack}})\r\n    },\r\n    getCards(paginationCardsData: any) {\r\n        return instance.get(`cards/card/`, {params: paginationCardsData})\r\n    },\r\n    createCard(cardsPack_id: string, values: { question: string, answer: string }) {\r\n        return instance.post(`cards/card`, {\r\n            card:\r\n                {\r\n                    cardsPack_id: cardsPack_id,\r\n                    ...values\r\n                }\r\n        })\r\n    },\r\n    deleteCard(idCarsPack: string) {\r\n        return instance.delete(`cards/card/?id=${idCarsPack}`)\r\n    },\r\n    updateCard(cardId: string, question: string, answer: string) {\r\n        return instance.put(`cards/card`, {\r\n            card: {\r\n                _id: cardId,\r\n                question: question,\r\n                answer: answer\r\n\r\n            }\r\n        })\r\n    },\r\n    gradeCard(grade: number, card_id: string) {\r\n        return instance.put(`cards/grade`,\r\n            {\r\n                grade: grade,\r\n                card_id: card_id\r\n\r\n            }\r\n        )\r\n    },\r\n\r\n}\r\n\r\nexport type getCardPacksDataType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\nexport type getCardsDataType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n\r\n}","import {CardsAPI} from \"../../n1-main/m3-dal/instance\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {valueType} from \"../../n1-main/m1-ui/common/Modal/AddCardForm/AddCardForm\";\r\nimport {getCards, handleResponseError} from \"../../n1-main/m2-bll/common/HelperFunctions\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n    paginationCards: {\r\n        page: 1,\r\n        pageCount: 3,\r\n        cardAnswer: '',\r\n        cardQuestion: '',\r\n        cardsPack_id: '',\r\n        min: 0,\r\n        max: 6,\r\n        sortCards: ''\r\n    },\r\n    totalCardsCount: 0\r\n}\r\n\r\nexport type cardsReducerInitialStateType = typeof initialState\r\n\r\nexport const cardsReducer = (state: cardsReducerInitialStateType = initialState, action: ActionsType): cardsReducerInitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_CARDS':\r\n            return {...state, cards: action.cards}\r\n        case \"SET_TOTAL_CARDS_COUNT\":\r\n            return {...state, totalCardsCount: action.packsCount}\r\n        case 'SET_PAGINATION_CARD_PROPERTY':\r\n            return {...state, paginationCards: {...state.paginationCards, ...action.property}}\r\n        case 'SET_CARD_GRADE':\r\n            const newCards = state.cards.map((card) => card._id === action.card_id ? {\r\n                ...card,\r\n                grade: action.grade\r\n            } : card)\r\n            return {...state, cards: newCards}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\n\r\nexport const setCardsAC = (cards: Array<CardType>) => ({type: 'SET_CARDS', cards} as const)\r\nexport const setTotalCardsCountAC = (packsCount: number) => ({type: \"SET_TOTAL_CARDS_COUNT\", packsCount} as const)\r\nexport const setPaginationCardAC = (property: setPaginationCardType) =>\r\n    ({type: 'SET_PAGINATION_CARD_PROPERTY', property} as const)\r\nexport const setCardGradeAC = (card_id: string, grade: number) => ({type: \"SET_CARD_GRADE\", card_id, grade} as const)\r\n//TC\r\n\r\n\r\nexport const getCardTC = () =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const addCardTC = (cardsPack_id: string, values: { question: string, answer: string }) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n           await CardsAPI.createCard(cardsPack_id, values)\r\n            await getCards(getState, dispatch)\r\n\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const removeCardTC = (cardsPack_id: string, cardId: string) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.deleteCard(cardId)\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const updateCardTC = (cardId: string, value: valueType) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.updateCard(cardId, value.question, value.answer)\r\n            await getCards(getState, dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const gradeCardTC = (grade: number, card_id: string) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            const Response = <AxiosResponse<any>>await CardsAPI.gradeCard(grade, card_id)\r\n            const newGrade = Response.data.updatedGrade.grade\r\n            dispatch(setCardGradeAC(card_id, newGrade))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\n\r\ntype ActionsType = ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setTotalCardsCountAC>\r\n    | ReturnType<typeof setPaginationCardAC>\r\n    | ReturnType<typeof setCardGradeAC>\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    cardsTotalCount: number\r\n    minGrade: number\r\n    token: string\r\n    tokenDeathTime: Date\r\n}\r\nexport type CardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    user_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n    comments: string\r\n    type: string\r\n    rating: number\r\n    more_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    answerImg: string\r\n    questionImg: string\r\n    questionVideo: string\r\n}\r\nexport type setPaginationCardType =\r\n    { page: number }\r\n    | { pageCount: number }\r\n    | { cardAnswer: string }\r\n    | { cardQuestion: string }\r\n    | { cardsPack_id: string }\r\n    | { min: number }\r\n    | { max: number }\r\n    | { sortCards: string }\r\nexport type paginationCardsType = {\r\n    page: number\r\n    pageCount: number,\r\n    cardAnswer: string,\r\n    cardQuestion: string,\r\n    cardsPack_id: string,\r\n    min: number,\r\n    max: number,\r\n    sortCards: string\r\n}\r\n","import {CardsAPI, getCardPacksDataType} from '../../../src/n1-main/m3-dal/instance'\r\nimport {Dispatch} from 'redux'\r\nimport {setAppStatusAC, setPublicCardPacksCountAC} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {\r\n    getCardPacks,\r\n    handleResponseError,\r\n    setSuccessfulResponseData\r\n} from \"../../n1-main/m2-bll/common/HelperFunctions\";\r\nimport {setIsLoggedIn} from \"../f1-auth/auth-reducer\";\r\n\r\n\r\nlet initialState = {\r\n    cardPacks: [] as Array<PackType>,\r\n    pagination:\r\n        {\r\n            packName: \"\",//совпадение по имени\r\n            min: 0,\r\n            max: 0,//количество карточек в колоде\r\n            sortPacks: \"0updated\",// сортировка\r\n            page: 1, //номер страницы\r\n            pageCount: 3,//кол-во элем на странице\r\n            user_id: \"\",\r\n\r\n        },\r\n    totalPacksCount: 0  //кол-во колод\r\n}\r\nexport type packsReducerInitialStateType = typeof initialState\r\nexport const packsReducer = (state: packsReducerInitialStateType = initialState, action: ActionsType): packsReducerInitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_CARD_PACKS':\r\n            return {...state, cardPacks: action.cardPacks}\r\n        case 'SET_PAGINATION_PROPERTY':\r\n            return {...state, pagination: {...state.pagination, ...action.property}}\r\n        case \"SET-TOTAL-PACKS-COUNT\":\r\n            return {...state, totalPacksCount: action.packsCount}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setCardPacksAC = (cardPacks: Array<PackType>) => ({type: 'SET_CARD_PACKS', cardPacks} as const)\r\nexport const setPaginationAC = (property: setPaginationType) => ({type: 'SET_PAGINATION_PROPERTY', property} as const)\r\nexport const setTotalPacksCountAC = (packsCount: number) => ({type: \"SET-TOTAL-PACKS-COUNT\", packsCount} as const)\r\n//TC\r\n\r\n\r\nexport const getCardPacksTC = (getData: getCardPacksDataType = {}) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            const response = await getCardPacks(getState, dispatch)\r\n            const currentPage = getData.page\r\n            currentPage && dispatch(setPaginationAC({page: currentPage}))\r\n            dispatch(setTotalPacksCountAC(response.data.cardPacksTotalCount))\r\n            setSuccessfulResponseData(dispatch)\r\n            dispatch(setIsLoggedIn(true))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\nexport const addCardPacksTC = (newPackName: string) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.createCardsPack(newPackName)\r\n            const response = await getCardPacks(getState, dispatch)\r\n            dispatch(setPublicCardPacksCountAC(response.data.cardPacksTotalCount))\r\n            setSuccessfulResponseData(dispatch)\r\n            dispatch(setTotalPacksCountAC(response.data.cardPacksTotalCount))\r\n\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\nexport const removePackTC = (idCarsPack: string) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.deleteCardsPack(idCarsPack)\r\n            const response = await getCardPacks(getState, dispatch)\r\n            dispatch(setPublicCardPacksCountAC(response.data.cardPacksTotalCount))\r\n            setSuccessfulResponseData(dispatch)\r\n            dispatch(setTotalPacksCountAC(response.data.cardPacksTotalCount))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\nexport const updateTC = (id: string, newNamePack: string, getData: getCardPacksDataType = {}) =>\r\n    async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await CardsAPI.updateCardsPack(id, newNamePack)\r\n            await getCardPacks(getState, dispatch)\r\n            setSuccessfulResponseData(dispatch)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\n\r\n//types\r\ntype ActionsType =\r\n    | ReturnType<typeof setCardPacksAC>\r\n    | ReturnType<typeof setPaginationAC>\r\n    | ReturnType<typeof setTotalPacksCountAC>\r\n\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name?: string\r\n    private?: boolean\r\n    name: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    cardsCount?: number\r\n    type?: string\r\n    rating?: number\r\n    created?: string\r\n    updated?: string\r\n    more_id?: string\r\n    __v?: number\r\n}\r\nexport type getCardPacksResponseType = {\r\n    cardPacks: Array<PackType>\r\n    page: number\r\n    pageCount: number\r\n    cardPacksTotalCount: number                  // totalItemsCount\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    token: string\r\n    tokenDeathTime: Date\r\n}\r\nexport type setPaginationType =\r\n    { packName: string }\r\n    | { min: number }\r\n    | { max: number }\r\n    | { sortPacks: string }\r\n    | { page: number }\r\n    | { pageCount: number }\r\n    | { user_id: string }\r\n\r\nexport type paginationType = {\r\n    packName: string\r\n    min: number,\r\n    max: number\r\n    sortPacks: string\r\n    page: number\r\n    pageCount: number\r\n    user_id: string\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n     RequestStatusType,\r\n    setAppErrorAC,\r\n    setAppStatusAC,\r\n    setUserDataAC,\r\n    UserDataType\r\n} from \"../app-reduser\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {CardsAPI} from \"../../m3-dal/instance\";\r\nimport {GetCardsResponseType, setCardsAC, setTotalCardsCountAC} from \"../../../n2-features/f6-cards/Cards-reducer\";\r\nimport {AppRootStateType} from \"../store\";\r\nimport {setIsLoggedIn} from \"../../../n2-features/f1-auth/auth-reducer\";\r\nimport {\r\n    getCardPacksResponseType,\r\n    setCardPacksAC,\r\n\r\n\r\n} from \"../../../n2-features/f5-packs/Packs-reduser\";\r\n\r\nexport const getResponseError = (e: any) => e.response\r\n    ? e.response.data.error\r\n    : (e.message + ', more details in the console')\r\n\r\nexport const handleResponseError = (e: any, dispatch: Dispatch) => {\r\n\r\n    dispatch(setAppStatusAC('failed'))\r\n    const error = getResponseError(e)\r\n    dispatch(setAppErrorAC(error))\r\n}\r\nexport const getCards = async (getState: () => AppRootStateType, dispatch: Dispatch) => {\r\n    const paginationData = getState().cards.paginationCards\r\n    const response = <AxiosResponse<GetCardsResponseType>>await CardsAPI.getCards(paginationData)\r\n    const cards = response.data.cards\r\n    dispatch(setTotalCardsCountAC(response.data.cardsTotalCount))\r\n    dispatch(setCardsAC(cards))\r\n    dispatch(setAppStatusAC('succeeded'))\r\n    dispatch(setAppErrorAC(null))\r\n}\r\nexport const setResponseData = (dispatch: Dispatch, userData: UserDataType,  isLoggedIn: boolean) => {\r\n    dispatch(setUserDataAC(userData))\r\n    dispatch(setIsLoggedIn(isLoggedIn))\r\n    setSuccessfulResponseData(dispatch)\r\n\r\n}\r\nexport const setSuccessfulResponseData=(dispatch: Dispatch)=>{\r\n    dispatch(setAppErrorAC(null))\r\n    dispatch(setAppStatusAC('succeeded'))\r\n}\r\nexport const getCardPacks= async (getState: () => AppRootStateType, dispatch: Dispatch) => {\r\n    const paginationData = getState().packs.pagination\r\n    const response = <AxiosResponse<getCardPacksResponseType>>await CardsAPI.getCardPacks(paginationData)\r\n    dispatch(setCardPacksAC(response.data.cardPacks))\r\n    return response\r\n}","import {Dispatch} from \"redux\";\r\nimport {setAppErrorACType, setAppStatusAC, setAppStatusACType, UserDataType} from \"../../n1-main/m2-bll/app-reduser\";\r\nimport {AuthAPI, recoveryPasswordAPI, RegisterAPI} from \"../../n1-main/m3-dal/instance\";\r\nimport {\r\n    getResponseError,\r\n    handleResponseError,\r\n    setResponseData,\r\n    setSuccessfulResponseData\r\n} from \"../../n1-main/m2-bll/common/HelperFunctions\";\r\nimport {setCardPacksAC} from \"../f5-packs/Packs-reduser\";\r\nimport {setCardsAC} from \"../f6-cards/Cards-reducer\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\nconst initialState = {\r\n    recoveryEmail: false, // если true ссылка для восстановления пароля отправлена\r\n    isRegister: false,    // если true  регистрация прошла успешно успешно\r\n    newPassword: false,   // если true  новый пароль введен успешно\r\n    isLoggedIn: false,    // если true  в данный момент залогинены\r\n}\r\nexport type AuthInitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"RECOVERY_EMAIL\":\r\n            return {...state, recoveryEmail: action.value}\r\n        case 'SET_IS_REGISTER':\r\n            return {...state, isRegister: action.value}\r\n        case \"APP_SET_PASSWORD\":\r\n            return {...state, newPassword: action.newPassword}\r\n        case \"SET_IS_LOGGED_IN\":\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const recoveryEmailAC = (value: boolean) => ({type: 'RECOVERY_EMAIL', value} as const)\r\nexport const setIsRegister = (value: boolean) => ({type: 'SET_IS_REGISTER', value} as const)\r\nexport const setPasswordAC = (newPassword: boolean) => ({type: \"APP_SET_PASSWORD\", newPassword} as const)\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({type: 'SET_IS_LOGGED_IN', isLoggedIn} as const)\r\n\r\n\r\nexport const verificationEmailTC = (data: registeredEmailType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await recoveryPasswordAPI.registeredEmail(data)\r\n        dispatch(recoveryEmailAC(true))\r\n        setSuccessfulResponseData(dispatch)\r\n    } catch (e) {\r\n        handleResponseError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const RegisterTC = (data: RegisterParamsType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await RegisterAPI.register(data)\r\n        dispatch(setIsRegister(true))\r\n        setSuccessfulResponseData(dispatch)\r\n    } catch (e) {\r\n        handleResponseError(e, dispatch)\r\n    }\r\n}\r\nexport const setPasswordTC = (data: SetPasswordType) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await recoveryPasswordAPI.setPassword(data)\r\n            dispatch(setPasswordAC(true))\r\n            setSuccessfulResponseData(dispatch)\r\n\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\nexport const getMe = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        let response = <AxiosResponse<UserDataType>>await AuthAPI.getAuthMe()\r\n        setResponseData(dispatch, response.data, true)\r\n    } catch (e) {\r\n        dispatch(setAppStatusAC('failed'))\r\n        const error = getResponseError(e)\r\n        console.log(error)\r\n        dispatch(setIsLoggedIn(false))\r\n    }\r\n}\r\nexport const login = (mail: string, password: string, remember_Me: boolean) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            let response = <AxiosResponse<UserDataType>>await AuthAPI.login(mail, password, remember_Me)\r\n            setResponseData(dispatch, response.data, true)\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n    }\r\n\r\nexport const logout = () =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await AuthAPI.logout()\r\n            setResponseData(dispatch, null, false)\r\n            dispatch(setCardPacksAC([]))\r\n            dispatch(setCardsAC([]))\r\n        } catch (e) {\r\n            handleResponseError(e, dispatch)\r\n        }\r\n\r\n    }\r\nexport type registeredEmailType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type SetPasswordType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type recoveryEmailACType = ReturnType<typeof recoveryEmailAC>\r\nexport type setIsRegisterACType = ReturnType<typeof setIsRegister>\r\nexport type setPasswordACType = ReturnType<typeof setPasswordAC>\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedIn>\r\ntype ActionsType = recoveryEmailACType\r\n    | setAppStatusACType\r\n    | setAppErrorACType\r\n    | setIsRegisterACType\r\n    | setPasswordACType\r\n    | setIsLoggedInACType","import {AppRootStateType} from \"../../n1-main/m2-bll/store\";\n\nexport const selectorRecoveryEmail = (state:AppRootStateType):boolean => state.auth.recoveryEmail\nexport const selectorIsRegister = (state:AppRootStateType):boolean => state.auth.isRegister\nexport const selectorNewPassword = (state:AppRootStateType):boolean => state.auth.newPassword\nexport const selectorIsLoggedIn = (state:AppRootStateType):boolean => state.auth.isLoggedIn","import {AppRootStateType} from \"../../n1-main/m2-bll/store\";\nimport {RequestStatusType, UserDataType} from \"./app-reduser\";\n\nexport const selectorStatus = (state:AppRootStateType):RequestStatusType => state.app.status\nexport const selectorError = (state:AppRootStateType):string|null => state.app.status\nexport const selectorUserData = (state:AppRootStateType):UserDataType => state.app.UserData\nexport const selectorUserId =  (state:AppRootStateType):string=> state.app.UserData ? state.app.UserData._id : \"\"","import React from 'react'\r\nimport SuperInput from '../../../n1-main/m1-ui/common/SuperInput/SuperInput';\r\nimport SuperButton from '../../../n1-main/m1-ui/common/SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useFormik} from 'formik';\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport {login} from \"../auth-reducer\";\r\nimport {selectorIsLoggedIn} from \"../authSelector\";\r\nimport {selectorStatus} from \"../../../n1-main/m2-bll/appSelector\";\r\n\r\n\r\nexport const Login = () => {\r\n    const status = useSelector(selectorStatus)\r\n    const isLoggedIn = useSelector(selectorIsLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const disable = status === 'loading'\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"Potapov.eo@mail.ru\",\r\n            password: \"jekajeka\",\r\n            rememberMe: true\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Required\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            const thunk = login(values.email, values.password, values.rememberMe)\r\n            dispatch(thunk)\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>LOG IN</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div><SuperInput name=\"email\" onChange={formik.handleChange} onBlur={formik.handleBlur} type=\"text\"\r\n                                 value={formik.values.email} placeholder={\"Email\"}/></div>\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.email} </div> : null}\r\n                <div><SuperInput name=\"password\" onChange={formik.handleChange} onBlur={formik.handleBlur}\r\n                                 type=\"password\" value={formik.values.password} placeholder={\"Password\"}/></div>\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.password} </div> : null}\r\n                <div><span>Remember me </span><input name=\"rememberMe\" onChange={formik.handleChange}\r\n                                                     checked={formik.values.rememberMe} type=\"checkbox\"/></div>\r\n                <div><SuperButton disabled={disable} name=\"log in\"/></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n","import React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {RegisterTC} from \"../auth-reducer\";\r\nimport {selectorIsLoggedIn, selectorIsRegister} from \"../authSelector\";\r\nimport {selectorStatus} from \"../../../n1-main/m2-bll/appSelector\";\r\n\r\nexport const Register = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector(selectorStatus)\r\n    const isLoggedIn = useSelector(selectorIsLoggedIn)\r\n    const isRegister = useSelector(selectorIsRegister)\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n    }\r\n    const disable = status === 'loading'\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'potapov.eo@yandex.ru',\r\n            password: 'jekajeka',\r\n            password2: 'jekajeka',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'email Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'password Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Invalid email address';\r\n            } else if (values.password2 !== values.password) {\r\n                errors.password = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n\r\n        onSubmit: values => {\r\n            dispatch(RegisterTC({email: values.email, password: values.password}))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    if (isRegister) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return <div className=\"App\">\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <h1>REGISTRATION</h1>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"email\"}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n            </div>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"password\"}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"password2\"}\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password2}\r\n                />\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n            </div>\r\n            <SuperButton disabled={disable} type=\"submit\"/>\r\n\r\n        </form>\r\n\r\n\r\n    </div>\r\n}","import React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\nimport {recoveryEmailAC, verificationEmailTC} from \"../auth-reducer\";\r\nimport {selectorStatus} from \"../../../n1-main/m2-bll/appSelector\";\r\nimport {selectorRecoveryEmail} from \"../authSelector\";\r\n\r\n\r\nexport const RecoveryPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector(selectorStatus)\r\n    const registeredEmail = useSelector(selectorRecoveryEmail)\r\n    const from = \"test-front-admin <ai73a@yandex.by>\"\r\n    const message = !DEV_VERSION\r\n        ? \"<div>password recovery link:<a\" +\r\n        \" href='http://localhost:3000/#/new-password/$token$'>link</a></div>\"\r\n        : \"<div>password recovery link:<a\" +\r\n        \" href='https://potapov-eo.github.io/friday-day/#/new-password/$token$'>link</a></div>\"\r\n\r\n    type FormikErrorType = {\r\n        email?: string\r\n        from?: string\r\n        message?: string\r\n    }\r\n    const disable = status === 'loading'\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(verificationEmailTC({email: values.email, from, message}))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    const TryAgain = () => dispatch(recoveryEmailAC(false))\r\n    if (registeredEmail) {\r\n        return (\r\n            <div className=\"App\">\r\n                <h1>Recovery Password</h1>\r\n                <h2>Success!</h2>\r\n                <h3>Click the link in the message in your email</h3>\r\n                <SuperButton onClick={TryAgain} name={\"Try again\"}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return <div className=\"App\">\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h1>Recovery Password</h1>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"email\"}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n            </div>\r\n\r\n            <SuperButton disabled={disable} type=\"submit\" name='Send'/>\r\n\r\n        </form>\r\n\r\n    </div>\r\n}","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../n1-main/m1-ui/routes/Routes\";\r\nimport s from \"./Profile.module.css\";\r\nimport {selectorIsLoggedIn} from \"../f1-auth/authSelector\";\r\nimport {selectorUserData} from \"../../n1-main/m2-bll/appSelector\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    const isLoggedIn = useSelector(selectorIsLoggedIn)\r\n    const userData = useSelector(selectorUserData)\r\n    let {name, email, publicCardPacksCount} = userData ? userData : {name: \"\", email: \"\", publicCardPacksCount: \"\"}\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    const avatar = \"https://www.meme-arsenal.com/memes/86d4e6cb230346eedca4b6c0d8970fef.jpg\"\r\n    return (\r\n\r\n        <div className={s.profile}>\r\n            <h1>PROFILE</h1>\r\n            <div className={s.profileContainer}>\r\n                <img className={s.avatar} src={avatar}/>\r\n                {/* {userData.avatar} */}\r\n                <div className={s.info}>\r\n                    <div> Name: <span>{name}</span></div>\r\n                    <div> Email: <span>{email}</span></div>\r\n                    <div>Public Card Packs Count: <span>{publicCardPacksCount}</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport {setPasswordTC} from \"../auth-reducer\";\r\nimport {selectorStatus} from \"../../../n1-main/m2-bll/appSelector\";\r\nimport {selectorNewPassword} from \"../authSelector\";\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector(selectorStatus)\r\n    const newPassword = useSelector(selectorNewPassword)\r\n    type FormikErrorType = {\r\n        password?: string\r\n        resetPasswordToken?: string\r\n    }\r\n\r\n    let {token} = useParams<{ token: string }>()\r\n\r\n    const disable = status === 'loading'\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n            password2: '',\r\n            resetPasswordToken: (token)\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.password) {\r\n                errors.password = 'password Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'length of passwords should be 7 and more simbols';\r\n            } else if (values.password2 !== values.password) {\r\n                errors.password = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(setPasswordTC({password: values.password, resetPasswordToken: values.resetPasswordToken}))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if (newPassword) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return <div className=\"App\">\r\n        <form onSubmit={formik.handleSubmit}>\r\n            NewPassword\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"password\"}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n            </div>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"confirm password\"}\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password2}\r\n                />\r\n                {formik.touched.password2 && formik.errors.password2 ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.password2}</div> : null}\r\n            </div>\r\n\r\n            <SuperButton disabled={disable} type=\"submit\" name='Send'/>\r\n\r\n        </form>\r\n    </div>\r\n}\r\n","import style from './Modal.module.css'\r\n\r\n\r\nexport let Modal = (props: { activeModal: boolean, setActiveModal: (activeModal: boolean) => void, children: any }) => {\r\n    return <div className={props.activeModal ? style.modal + ' ' + style.modalActive : style.modal} onClick={() => {\r\n        props.setActiveModal(false)\r\n    }}>\r\n        <div className={props.activeModal ? style.modalContant + ' ' + style.modalContantactive : style.modalContant}\r\n             onClick={e => {\r\n                 e.stopPropagation();\r\n                            }}>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport SuperButton from '../../SuperButton/SuperButton'\r\n\r\nexport type BooleanFormPropsType = {\r\n    question?: string\r\n    push: (isDel: boolean) => void\r\n}\r\n\r\nexport const BooleanForm = React.memo(({question, push}: BooleanFormPropsType) => {\r\n\r\n    const addItemTitle = (value: boolean) => {\r\n        push(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>{question}</div>\r\n\r\n            <SuperButton type=\"submit\" onClick={() => addItemTitle(true)} name={\"YES\"}/>\r\n            <SuperButton type=\"submit\" onClick={() => addItemTitle(false)} name={\"NO\"}/>\r\n        </div>\r\n\r\n    )\r\n})","import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport SuperInput from \"../../SuperInput/SuperInput\";\r\nimport SuperButton from \"../../SuperButton/SuperButton\";\r\n\r\nexport type valueType = { question: string, answer: string }\r\ntype AddCardFormPropsType = {\r\n    addItem: (title: string) => void\r\n    buttonName: string\r\n    itemName: string\r\n    text?: string\r\n}\r\nexport const AddForm = React.memo((props: AddCardFormPropsType\r\n) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            values: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.values) {\r\n                errors.values = \"Required field\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm()\r\n            props.addItem(values.values)\r\n\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div>{props.text}</div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div><SuperInput name=\"values\" onChange={formik.handleChange} onBlur={formik.handleBlur}\r\n                                 type=\"text\"\r\n                                 value={formik.values.values} placeholder={props.itemName}/></div>\r\n                {formik.touched.values && formik.errors.values ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.values} </div> : null}\r\n                <div><SuperButton type=\"submit\" name={props.buttonName}/></div>\r\n            </form>\r\n        </div>\r\n    )\r\n})\r\n\r\n//types\r\ntype FormikErrorType = {\r\n    values?: string\r\n}","import React from 'react'\r\nimport s from '../../Packs.module.css'\r\n\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PackType} from \"../../Packs-reduser\";\r\nimport SuperButton from \"../../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport {PATH} from \"../../../../n1-main/m1-ui/routes/Routes\";\r\nimport {selectorStatus, selectorUserId} from \"../../../../n1-main/m2-bll/appSelector\";\r\n\r\n\r\ntype ActiveColumnPackType = {\r\n    pack: PackType\r\n    setActiveDelPackModal: (activeModal: boolean) => void\r\n    setActiveUpdatePackModal: (activeModal: boolean) => void\r\n}\r\nexport const ActiveColumnPack = (props: ActiveColumnPackType) => {\r\n\r\n    const status = useSelector(selectorStatus)\r\n    const registerUserId = useSelector(selectorUserId)\r\n    const {user_id, _id} = props.pack\r\n    const isMyPack = (user_id === registerUserId) && !(status === 'loading')\r\n\r\n    return (\r\n\r\n        <div className={s.tableString}>\r\n            <div><SuperButton disabled={!isMyPack} onClick={() => {\r\n                props.setActiveDelPackModal(true)\r\n            }} name={\"del\"}/></div>\r\n            <div><SuperButton disabled={!isMyPack} name={\"update\"} onClick={() => {\r\n                props.setActiveUpdatePackModal(true)\r\n            }}/></div>\r\n            <div><NavLink to={`${PATH.CARDS}/${_id}`} activeClassName={s.activeLink}>CARDS</NavLink></div>\r\n            <div><NavLink to={`${PATH.LEARN}/${_id}`} activeClassName={s.activeLink}>Learn</NavLink></div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport s from '../Packs.module.css'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {PackType, removePackTC, updateTC} from \"../Packs-reduser\";\r\nimport {Modal} from '../../..//n1-main/m1-ui/common/Modal/Modal'\r\nimport {BooleanForm} from \"../../../n1-main/m1-ui/common/Modal/BooleanModal/BooleanForm\";\r\nimport {AddForm} from \"../../../n1-main/m1-ui/common/Modal/AddForm/AddForm\";\r\nimport {ActiveColumnPack} from \"./activeColumnPack/activeColumnPack\";\r\n\r\n\r\ntype packPropsType = {\r\n    pack: PackType\r\n    activeModal: boolean\r\n    setActiveModal: (activeModal: boolean) => void\r\n}\r\nexport const Pack = (props: packPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const [activeDelPackModal, setActiveDelPackModal] = useState<boolean>(false)\r\n    const [activeUpdatePackModal, setActiveUpdatePackModal] = useState<boolean>(false)\r\n    const [isActiveColumnPack, setIsActiveColumnPack] = useState<boolean>(false)\r\n    const {_id, name, cardsCount, updated} = props.pack\r\n\r\n\r\n    const deletePack = (isDel: boolean) => {\r\n        setActiveDelPackModal(false)\r\n        isDel && dispatch(removePackTC(_id))\r\n    }\r\n\r\n    const updatePack = (newNamePack: string) => {\r\n        dispatch(updateTC(_id, newNamePack))\r\n        setActiveUpdatePackModal(false)\r\n    }\r\n    const showActiveColumnPack = () => {\r\n        setIsActiveColumnPack(!isActiveColumnPack)\r\n    }\r\n    const nameBtn = isActiveColumnPack ? \"<<<\" : \">>>\"\r\n    return (\r\n        <div>\r\n            <div className={s.tableString}>\r\n\r\n                <div>{name} </div>\r\n                <div>{cardsCount}</div>\r\n                <div>{updated ? updated.slice(0, 10) : \"\"}</div>\r\n                <span className={s.ActiveColumnPack}>\r\n                <ActiveColumnPack pack={props.pack}\r\n                                  setActiveDelPackModal={setActiveDelPackModal}\r\n                                  setActiveUpdatePackModal={setActiveUpdatePackModal}/></span>\r\n\r\n                <div className={s.ActiveColumnPack3}><SuperButton onClick={() => showActiveColumnPack()}\r\n                                                                  name={nameBtn}/></div>\r\n\r\n            </div>\r\n\r\n            <span className={s.ActiveColumnPack2}>\r\n                {isActiveColumnPack && <ActiveColumnPack pack={props.pack}\r\n                                                         setActiveDelPackModal={setActiveDelPackModal}\r\n                                                         setActiveUpdatePackModal={setActiveUpdatePackModal}/>}\r\n            </span>\r\n\r\n\r\n            <Modal activeModal={activeUpdatePackModal} setActiveModal={setActiveUpdatePackModal}>\r\n                <AddForm addItem={updatePack} buttonName={\"update\"} itemName={\"new name\"} text={\"Enter new name\"}/>\r\n            </Modal>\r\n            <Modal activeModal={activeDelPackModal} setActiveModal={setActiveDelPackModal}>\r\n                <BooleanForm question={`you want to remove the pack with the name: \"${name}\". Are you sure`}\r\n                             push={deletePack}/>\r\n            </Modal>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\nexport const Paginator = (props: PropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize)\r\n    let [portionNumber, setPortionNumber] = useState<number>(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * props.portionSize\r\n\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(portionNumber - 1)}>Previous </button>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                        return <span key={p}\r\n                            className={props.currentPage === p ? `${styles.coursor && styles.selectedPage}` : `'' ${styles.coursor} `}\r\n                            onClick={() => {\r\n                                props.onPageChanged(p)\r\n                            }}\r\n                        > {p} </span>\r\n                    })\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './SortButtons.module.css'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faSortDown, faSortUp} from '@fortawesome/free-solid-svg-icons'\r\nimport {getCardPacksTC, setPaginationAC} from '../../../../n2-features/f5-packs/Packs-reduser'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nexport const SortPackButton = (props: { param: string }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const sortUp = (param: string) => {\r\n        dispatch(setPaginationAC({sortPacks: `1` + param}))\r\n        dispatch(getCardPacksTC())\r\n    }\r\n    const sortDown = (param: string) => {\r\n        dispatch(setPaginationAC({sortPacks: `0` + param}))\r\n        dispatch(getCardPacksTC())\r\n    }\r\n    return <div className={s.tableSortIcons}>\r\n        <a type=\"submit\" onClick={() => sortUp(props.param)}><FontAwesomeIcon icon={faSortUp} size=\"1x\"/></a>\r\n        <a type=\"submit\" onClick={() => sortDown(props.param)}><FontAwesomeIcon icon={faSortDown} size=\"1x\"/></a>\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport { SortPackButton } from '../../../../n1-main/m1-ui/common/SortButtons/SortPackButton';\r\nimport SuperButton from \"../../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport s from './Headings.module.css'\r\n\r\ntype HeadingsPropsType = {\r\n    setActiveAddPackModal: (value: boolean) => void\r\n}\r\nexport const Headings = (props: HeadingsPropsType) => {\r\n\r\n    return (\r\n        <  >\r\n            <div className={s.tableColumnTitle}>\r\n                <h2> Name</h2>\r\n                <SortPackButton param=\"name\"/>\r\n            </div>\r\n            <div className={s.tableColumnTitle}>\r\n\r\n                <h2> Cards Count</h2>\r\n                <SortPackButton param=\"cardsCount\"/>\r\n            </div>\r\n            <div className={s.tableColumnTitle}>\r\n                <h2> Updated</h2>\r\n                <SortPackButton param=\"updated\"/>\r\n            </div>\r\n            <div><SuperButton onClick={() => {\r\n                props.setActiveAddPackModal(true)\r\n            }} name={\"add\"}/></div>\r\n\r\n            <div className={s.tableColumnTitleHide} ><h2>Update</h2></div>\r\n            <div className={s.tableColumnTitleHide}><h2> Cards</h2></div>\r\n             <div className={s.tableColumnTitleHide}><h2> Learn</h2></div>\r\n\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import {AppRootStateType} from \"../../n1-main/m2-bll/store\";\nimport {PackType, paginationType} from \"./Packs-reduser\";\n\nexport const selectorCardPacks = (state:AppRootStateType):Array<PackType> => state.packs.cardPacks\nexport const selectorTotalPacksCount = (state:AppRootStateType):number => state.packs.totalPacksCount\nexport const selectorPagination = (state:AppRootStateType):paginationType => state.packs.pagination\n\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {addCardPacksTC, getCardPacksTC, setPaginationAC} from './/Packs-reduser'\r\nimport s from './Packs.module.css'\r\nimport {Pack} from \"./pack/Pack\";\r\nimport {Paginator} from \"../../n1-main/m1-ui/common/Paginator/Paginator\";\r\nimport {Modal} from '../../n1-main/m1-ui/common/Modal/Modal'\r\nimport {AddForm} from \"../../n1-main/m1-ui/common/Modal/AddForm/AddForm\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../n1-main/m1-ui/routes/Routes\";\r\nimport {Headings} from \"./pack/headings/Headings\";\r\nimport SuperInput from \"../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {selectorIsLoggedIn} from \"../f1-auth/authSelector\";\r\nimport {selectorStatus, selectorUserData, selectorUserId} from \"../../n1-main/m2-bll/appSelector\";\r\nimport {selectorCardPacks, selectorPagination, selectorTotalPacksCount} from \"./packSelector\";\r\n\r\n\r\nexport const Packs = (props: { activeModal: boolean, setActiveModal: (activeModal: boolean) => void }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector(selectorIsLoggedIn)\r\n    const userId = useSelector(selectorUserId)\r\n    const UserData = useSelector(selectorUserData)\r\n    const status = useSelector(selectorStatus)\r\n    const cardPacks = useSelector(selectorCardPacks)\r\n    const pagination = useSelector(selectorPagination)\r\n    const totalPacksCount = useSelector(selectorTotalPacksCount)\r\n    const {page, user_id, pageCount} = pagination\r\n    const [isChange, setIsChange] = useState<boolean>(false)\r\n    const [idTimeout, setIdTimeout] = useState<number>(0)\r\n    const [searchName, setSearchName] = useState<string>(\"\")\r\n    const [activeAddPackModal, setActiveAddPackModal] = useState<boolean>(false)\r\n    const [isMyPackChecked, setIsMyPackChecked] = useState<boolean>(false)\r\n    const isLoading = status === 'loading'\r\n\r\n    const setChange = useCallback(() => {\r\n        clearTimeout(idTimeout)\r\n        const id = window.setTimeout(() => {\r\n            setIsChange(true)\r\n            setIdTimeout(0)\r\n        }, 1500)\r\n        setIdTimeout(id)\r\n    }, [idTimeout])                                                                   // задержка при поиске\r\n\r\n    useEffect(() => {\r\n        if (isChange && !isLoading) {\r\n            dispatch(setPaginationAC({packName: searchName}))\r\n            dispatch(getCardPacksTC())\r\n            setIsChange(false)\r\n        }\r\n        if (user_id) {\r\n            setIsMyPackChecked(true)\r\n        }\r\n    }, [setChange, isChange, setIsChange, setPaginationAC, isLoading])                    //  поиск по имени\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchName(e.currentTarget.value)\r\n        setChange()\r\n    }                                                                   // колбек для изменения текста инпута поиска\r\n\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            dispatch(getCardPacksTC())\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    const change = (e: ChangeEvent<HTMLInputElement>) => {              // колбек для изменения чек-бокса мои колоды\r\n        if (e.currentTarget.checked) {\r\n            setIsMyPackChecked(true)\r\n            dispatch(setPaginationAC({user_id: userId}))\r\n            dispatch(getCardPacksTC())\r\n\r\n        } else {\r\n            setIsMyPackChecked(false)\r\n            dispatch(setPaginationAC({user_id: \"\"}))\r\n            dispatch(getCardPacksTC())\r\n        }\r\n    }\r\n\r\n    const addPack = (newPackName: string) => {\r\n        dispatch(addCardPacksTC(newPackName))\r\n        setActiveAddPackModal(false)\r\n    }\r\n\r\n    const onPageChanged = (pageNumber: number) => {                           // изменение номера страницы пагинатора\r\n        dispatch(setPaginationAC({page: pageNumber}))\r\n        dispatch(getCardPacksTC())\r\n    }\r\n\r\n    if (!UserData) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.table}>\r\n            <h1>Packs</h1>\r\n            <div> my Pack <input checked={isMyPackChecked} type={\"checkbox\"} onChange={change}/></div>\r\n\r\n            <div className={s.search}> Pack name search: <SuperInput value={searchName} onChange={onChangeCallback}/>\r\n            </div>\r\n\r\n            {isLoggedIn ? <div className={s.tableString}>\r\n                < Headings setActiveAddPackModal={setActiveAddPackModal}/>\r\n            </div> : <>\r\n                <div>\"you are not authorized\"</div>\r\n                <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}>{\"LOGIN >>> >>> >>> \"}</NavLink>\r\n            </>}\r\n\r\n            {cardPacks.map(pack =>\r\n                <Pack key={pack._id} pack={pack}\r\n                      activeModal={props.activeModal} setActiveModal={props.setActiveModal}/>\r\n            )}\r\n\r\n            <Paginator currentPage={page} pageSize={pageCount} totalItemsCount={totalPacksCount} portionSize={10}\r\n                       onPageChanged={onPageChanged}/>\r\n\r\n            <Modal activeModal={activeAddPackModal} setActiveModal={setActiveAddPackModal}>\r\n                <AddForm addItem={addPack} buttonName={\"ADD PACK\"} itemName={\"pack name\"}\r\n                         text={\"enter the name of the new pack\"}/>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport SuperInput from \"../../SuperInput/SuperInput\";\r\nimport SuperButton from \"../../SuperButton/SuperButton\";\r\n\r\nexport type valueType = { question: string, answer: string }\r\ntype AddCardFormPropsType = {\r\n\r\n    addCard: (value: valueType) => void\r\n    text?: string\r\n}\r\nexport const AddCardForm = React.memo((props: AddCardFormPropsType\r\n) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            question: \"\",\r\n            answer: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.question) {\r\n                errors.question = \"Required field\"\r\n            }\r\n            if (!values.answer) {\r\n                errors.answer = \"Required field\"\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm()\r\n            props.addCard(values)\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div>{props.text}</div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div><SuperInput name=\"question\" onChange={formik.handleChange} onBlur={formik.handleBlur} type=\"text\"\r\n                                 value={formik.values.question} placeholder={\"question\"}/></div>\r\n                {formik.touched.question && formik.errors.question ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.question} </div> : null}\r\n                <div><SuperInput name=\"answer\" onChange={formik.handleChange} onBlur={formik.handleBlur}\r\n                                 type=\"answer\" value={formik.values.answer} placeholder={\"answer\"}/></div>\r\n                {formik.touched.answer && formik.errors.answer ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.answer} </div> : null}\r\n\r\n                <div><SuperButton type=\"submit\" name=\"ADD\"/></div>\r\n            </form>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype FormikErrorType = {\r\n    question?: string\r\n    answer?: string\r\n\r\n}","import React from 'react'\r\nimport s from '../../../f5-packs/Packs.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport SuperButton from \"../../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport {CardType} from \"../../Cards-reducer\";\r\nimport {selectorStatus, selectorUserId} from \"../../../../n1-main/m2-bll/appSelector\";\r\n\r\n\r\ntype ActiveColumnCardType = {\r\n    card: CardType\r\n    setActiveDelCardModal: (activeModal: boolean) => void\r\n    setActiveAddCardModal: (activeModal: boolean) => void\r\n    additionalColumn?: boolean\r\n}\r\nexport const ActiveColumnCard = (props: ActiveColumnCardType) => {\r\n\r\n    const status = useSelector(selectorStatus)\r\n    const registerUserId = useSelector(selectorUserId)\r\n    const isMyPack = (props.card.user_id === registerUserId) && !(status === 'loading')\r\n\r\n    return (\r\n        <div className={s.tableString}>\r\n            {props.additionalColumn && <div className={s.tableColumnTitle}>\r\n                <h2>updated</h2>\r\n            </div>}\r\n            <div>{props.card.updated.slice(0, 10)}</div>\r\n            <div><SuperButton disabled={!isMyPack} onClick={() => {\r\n                props.setActiveDelCardModal(true)\r\n            }} name={\"del\"}/></div>\r\n\r\n            <div>\r\n                <SuperButton disabled={!isMyPack} onClick={() => props.setActiveAddCardModal(true)} name={\"update\"}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport s from '../../f5-packs/Packs.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {CardType, removeCardTC, updateCardTC} from \"../Cards-reducer\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport {Modal} from \"../../../n1-main/m1-ui/common/Modal/Modal\";\r\nimport {BooleanForm} from \"../../../n1-main/m1-ui/common/Modal/BooleanModal/BooleanForm\";\r\nimport {AddCardForm, valueType} from \"../../../n1-main/m1-ui/common/Modal/AddCardForm/AddCardForm\";\r\nimport {ActiveColumnCard} from \"./activeColumnCard/activeColumnCard\";\r\n\r\ntype cardPropsType = {\r\n    card: CardType\r\n}\r\nexport const Card = (props: cardPropsType) => {\r\n    const card = props.card\r\n    const dispatch = useDispatch()\r\n    const [isActiveColumnPack, setIsActiveColumnPack] = useState<boolean>(false)\r\n    const [activeAddCardModal, setActiveAddCardModal] = useState<boolean>(false)\r\n    const [activeDelPackModal, setActiveDelCardModal] = useState<boolean>(false)\r\n\r\n    const removeCard = (isDel: boolean) => {\r\n        setActiveDelCardModal(false)\r\n        isDel && dispatch(removeCardTC(card.cardsPack_id, card._id))\r\n    }\r\n    const updatedCard = (value: valueType) => {\r\n        setActiveAddCardModal(false)\r\n        dispatch(updateCardTC(card._id, value))\r\n    }\r\n    const showActiveColumnPack = () => {\r\n        setIsActiveColumnPack(!isActiveColumnPack)\r\n    }\r\n    const nameBtn = isActiveColumnPack ? \"<<<\" : \">>>\"\r\n    return (\r\n        <div>\r\n            <div className={s.tableString}>\r\n                <div>{card.question}</div>\r\n                <div>{card.answer}</div>\r\n                <div>{card.grade}</div>\r\n\r\n                <div className={s.ActiveColumnPack3}><SuperButton onClick={() => showActiveColumnPack()}\r\n                                                                  name={nameBtn}/></div>\r\n                <span className={s.ActiveColumnPack}>\r\n                    <ActiveColumnCard card={card} setActiveAddCardModal={setActiveAddCardModal}\r\n                                      setActiveDelCardModal={setActiveDelCardModal}/>\r\n\r\n           </span>\r\n            </div>\r\n\r\n            <span className={s.ActiveColumnPack2}>\r\n                {isActiveColumnPack && <ActiveColumnCard card={card} setActiveAddCardModal={setActiveAddCardModal}\r\n                                                         setActiveDelCardModal={setActiveDelCardModal}\r\n                                                         additionalColumn={true}\r\n                />}\r\n            </span>\r\n\r\n\r\n            <Modal activeModal={activeDelPackModal} setActiveModal={setActiveDelCardModal}>\r\n                <BooleanForm question={`you want to remove the card with the question: \"${card.question}\"`}\r\n                             push={removeCard}/>\r\n            </Modal>\r\n            <Modal activeModal={activeAddCardModal} setActiveModal={setActiveAddCardModal}>\r\n                <AddCardForm addCard={updatedCard} text={\"Enter new question and new answer\"}/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './SortButtons.module.css'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faSortDown, faSortUp} from '@fortawesome/free-solid-svg-icons'\r\nimport {useDispatch} from 'react-redux'\r\nimport {getCardTC, setPaginationCardAC} from \"../../../../n2-features/f6-cards/Cards-reducer\";\r\n\r\nexport const SortCardButton = (props: { param: string }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const sortUp = (param: string) => {\r\n        dispatch(setPaginationCardAC({sortCards: `1` + param}))\r\n        dispatch(getCardTC())\r\n    }\r\n    const sortDown = (param: string) => {\r\n        dispatch(setPaginationCardAC({sortCards: `0` + param}))\r\n        dispatch(getCardTC())\r\n    }\r\n    return <div className={s.tableSortIcons}>\r\n        <a type=\"submit\" onClick={() => sortUp(props.param)}><FontAwesomeIcon icon={faSortUp} size=\"1x\"/></a>\r\n        <a type=\"submit\" onClick={() => sortDown(props.param)}><FontAwesomeIcon icon={faSortDown} size=\"1x\"/></a>\r\n    </div>\r\n}","import React from 'react'\r\n\r\nimport s from '../../f5-packs/pack/headings/Headings.module.css'\r\nimport {SortCardButton} from \"../../../n1-main/m1-ui/common/SortButtons/SortCardButton\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\n\r\ntype CardsHeadingsPropsType = {\r\n    setActiveAddCardModal: (value: boolean) => void\r\n    isMyPack: boolean\r\n}\r\nexport const CardsHeadings = (props: CardsHeadingsPropsType) => {\r\n\r\n    return (\r\n        < >\r\n            <div className={s.tableColumnTitle}>\r\n                <h2>question</h2>\r\n                <SortCardButton param=\"question\"/>\r\n            </div>\r\n\r\n            <div className={s.tableColumnTitle}>\r\n                <h2>answer</h2>\r\n                <SortCardButton param=\"answer\"/>\r\n            </div>\r\n\r\n            <div className={s.tableColumnTitle}>\r\n                <h2>grade</h2>\r\n                <SortCardButton param=\"grade\"/>\r\n            </div>\r\n\r\n            <div className={s.tableColumnTitleHide}>\r\n                <h2>updated</h2>\r\n            </div>\r\n\r\n            <div>\r\n                <SuperButton onClick={() => {\r\n                    props.setActiveAddCardModal(true)\r\n                }} disabled={!props.isMyPack} name={\"add\"}/>\r\n            </div>\r\n            <div className={s.tableColumnTitleHide}></div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import {AppRootStateType} from \"../../n1-main/m2-bll/store\";\nimport {CardType, paginationCardsType} from \"./Cards-reducer\";\n\n\nexport const selectorCards = (state: AppRootStateType): Array<CardType> => state.cards.cards\nexport const selectorTotalCardsCount = (state: AppRootStateType): number => state.cards.totalCardsCount\nexport const selectorPaginationCards = (state: AppRootStateType): paginationCardsType => state.cards.paginationCards","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, Redirect, useParams} from \"react-router-dom\";\r\nimport s from \"../f5-packs/Packs.module.css\";\r\nimport {addCardTC, getCardTC, setPaginationCardAC} from \"./Cards-reducer\";\r\nimport {Card} from \"./card/Card\";\r\nimport {Paginator} from \"../../n1-main/m1-ui/common/Paginator/Paginator\";\r\nimport {Modal} from '../../n1-main/m1-ui/common/Modal/Modal'\r\nimport {PATH} from \"../../n1-main/m1-ui/routes/Routes\";\r\nimport {AddCardForm, valueType} from \"../../n1-main/m1-ui/common/Modal/AddCardForm/AddCardForm\";\r\nimport {CardsHeadings} from \"./cardsHeading/CardsHeadings\";\r\nimport SuperButton from \"../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport {selectorStatus, selectorUserData, selectorUserId} from \"../../n1-main/m2-bll/appSelector\";\r\nimport {selectorIsLoggedIn} from \"../f1-auth/authSelector\";\r\nimport {selectorCardPacks} from \"../f5-packs/packSelector\";\r\nimport {selectorCards, selectorPaginationCards, selectorTotalCardsCount} from \"./cardSelector\";\r\n\r\n\r\nexport const Cards = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const UserData = useSelector(selectorUserData)\r\n    const status = useSelector(selectorStatus)\r\n    const registerUserId = useSelector(selectorUserId)\r\n    const isLoggedIn = useSelector(selectorIsLoggedIn)\r\n    const packs = useSelector(selectorCardPacks)\r\n    const paginationCards = useSelector(selectorPaginationCards)\r\n    const totalCardsCount = useSelector(selectorTotalCardsCount)\r\n    const cards = useSelector(selectorCards)\r\n    const {page, pageCount} = paginationCards\r\n\r\n    const [activeAddCardModal, setActiveAddCardModal] = useState<boolean>(false)\r\n\r\n    const {token} = useParams<{ token: string }>()\r\n\r\n    const pack = packs.find(p => p._id === token)\r\n    const createdUserId = pack ? pack.user_id : registerUserId\r\n    const isMyPack = (createdUserId === registerUserId) && !(status === 'loading')\r\n\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn && token) {\r\n            dispatch(setPaginationCardAC({cardsPack_id: token}))\r\n            dispatch(getCardTC())\r\n        }\r\n    }, [isLoggedIn, token, dispatch])\r\n\r\n    const addCard = (value: valueType) => {\r\n        dispatch(addCardTC(token, value))\r\n        setActiveAddCardModal(false)\r\n    }\r\n\r\n    const onPageChanged = (newNumber: number) => {\r\n        dispatch(setPaginationCardAC({page: newNumber}))\r\n        dispatch(getCardTC())\r\n    }\r\n\r\n\r\n    if (!UserData) {\r\n\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.table}>\r\n            <h1>Cards</h1>\r\n            {token && (cards.length > 0) &&\r\n            <h2><NavLink to={`${PATH.LEARN}/${token}`} activeClassName={s.activeLink}>Learn</NavLink></h2>}\r\n\r\n            {token ? <div className={s.tableString}>\r\n                {isLoggedIn ? <CardsHeadings setActiveAddCardModal={setActiveAddCardModal}\r\n                                             isMyPack={isMyPack}/> : <>\r\n                    <div className={s.notAuthorized}>\"you are not authorized\"</div>\r\n                    <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}>{\"LOGIN >>> \"}</NavLink>\r\n                </>}\r\n\r\n            </div> : <><h3>\"НЕОБХОДИМО ВЫБРАТЬ КОЛОДУ\"</h3>\r\n                <NavLink to={PATH.PACK} activeClassName={s.activeLink}>\r\n                    < SuperButton name=\">>> Packs\"/>\r\n                </NavLink>  </>}\r\n\r\n            {token ? cards.map(card =>\r\n                <Card key={card._id} card={card}/>\r\n            ) : <div></div>}\r\n\r\n            <div>\r\n                {token && (cards.length > 0) &&\r\n                <Paginator currentPage={page} pageSize={pageCount} totalItemsCount={totalCardsCount} portionSize={3}\r\n                           onPageChanged={onPageChanged}/>}\r\n            </div>\r\n\r\n            <Modal activeModal={activeAddCardModal} setActiveModal={setActiveAddCardModal}>\r\n                <AddCardForm addCard={addCard} text={\"Enter question and answer of new card\"}/>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, Redirect, useParams} from \"react-router-dom\";\r\nimport {CardType, getCardTC, gradeCardTC, setPaginationCardAC} from \"../f6-cards/Cards-reducer\";\r\nimport SuperButton from \"../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport s from './Learn.module.css'\r\nimport {PATH} from \"../../n1-main/m1-ui/routes/Routes\";\r\nimport {selectorCards} from \"../f6-cards/cardSelector\";\r\nimport {selectorUserData} from \"../../n1-main/m2-bll/appSelector\";\r\nimport {selectorIsLoggedIn} from \"../f1-auth/authSelector\";\r\n\r\n\r\ntype LearnPropsType = {}\r\nexport const Learn = (props: LearnPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n    const cards = useSelector(selectorCards)\r\n    const UserData = useSelector(selectorUserData)\r\n    const isLoggedIn = (selectorIsLoggedIn)\r\n    const [isChecked, setIsChecked] = useState<boolean>(false)\r\n    const [first, setFirst] = useState<boolean>(true)\r\n    const [card, setCard] = useState<CardType | null>(null)\r\n\r\n\r\n    const getCard = (cards: CardType[]) => {\r\n        const sum = cards.reduce((acc, card) => acc + (6 - card.grade) ** 2, 0);\r\n        const rand = Math.random() * sum;\r\n        const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n                const newSum = acc.sum + (6 - card.grade) ** 2;\r\n                return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n            }\r\n            , {sum: 0, id: -1});\r\n\r\n        return cards[res.id + 1];\r\n    }\r\n\r\n    const grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\n    useEffect(() => {\r\n        if (first && token && isLoggedIn) {\r\n            dispatch(setPaginationCardAC({cardsPack_id: token}))\r\n            dispatch(getCardTC())\r\n            setFirst(false);\r\n        }\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n    }, [dispatch, token, cards, first, isLoggedIn])\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n    const setGrade = (i: number) => {\r\n        dispatch(gradeCardTC(i + 1, card ? card._id : \"\"))\r\n        setCard(getCard(cards))\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards));\r\n        }\r\n\r\n    }\r\n\r\n    if (!UserData) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }                                            // при logOut с этой страницы перебрасывает на стр. Логин\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <h1>LearnPage</h1>\r\n\r\n\r\n            {token ? <div>\r\n                <div className={s.card}>\r\n                    <h2>QUESTION:</h2>\r\n                    <div className={s.cardQuestion}>  {card ? card.question : \"\"}     </div>\r\n                </div>\r\n                <div>\r\n                    <SuperButton name={\"check\"} onClick={() => setIsChecked(true)}/>\r\n                </div>\r\n            </div> : <><h3>\"НЕОБХОДИМО ВЫБРАТЬ КОЛОДУ\"</h3>\r\n                <NavLink to={PATH.PACK} activeClassName={s.activeLink}>\r\n                    < SuperButton name=\">>> Packs\"/>\r\n                </NavLink> </>}\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <div className={s.card}>\r\n                        <h2>ANSWER:</h2>\r\n                        <div className={s.cardAnswer}>  {card ? card.answer : \"\"}</div>\r\n                    </div>\r\n\r\n                    {grades.map((g, i) => (\r\n                        <SuperButton name={g} key={'grade-' + i} onClick={() => setGrade(i)}/>\r\n                    ))}\r\n\r\n                    <div><SuperButton name={\"next\"} onClick={onNext}/></div>\r\n                </>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Error404} from \"../../../n2-features/f4-404/Error404\";\r\nimport {Test} from \"../../../n2-features/f0-test/test\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/LoginFormik\";\r\nimport {Register} from \"../../../n2-features/f1-auth/a2-register/Register\";\r\nimport {RecoveryPassword} from \"../../../n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword\";\r\nimport {Profile} from \"../../../n2-features/f2-profile/Profile\";\r\nimport {NewPassword} from \"../../../n2-features/f1-auth/a4-newPassword/NewPassword\";\r\nimport { Packs } from '../../../n2-features/f5-packs/Packs';\r\nimport {Cards} from \"../../../n2-features/f6-cards/Cards\";\r\nimport {Learn} from \"../../../n2-features/f6-learn/Learn\";\r\n\r\n\r\nexport const PATH = {\r\n    HOME: \"/home\",\r\n    TEST: \"/test\",\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    RECOVERY_PASSWORD: \"/recovery-password\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    PROFILE: \"/profile\",\r\n    PACK: \"/packs\",\r\n    CARDS: \"/cards\",\r\n    LEARN:\"/learn\"\r\n}\r\n\r\nexport const Routes = () => {\r\n    let [activeModal, setActiveModal] = useState<boolean>(false) \r\n    return (\r\n        <div>\r\n\r\n            <Switch>\r\n\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPassword/>}/>\r\n                <Route path={`${PATH.NEW_PASSWORD}/:token`} render={() => <NewPassword/> }/>\r\n                <Route path={PATH.NEW_PASSWORD} exact render={ () => <RecoveryPassword/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PACK} render={() => <Packs activeModal={activeModal} setActiveModal={setActiveModal}/>}/>\r\n                <Route path={`${PATH.CARDS}/:token`} render={() => <Cards/>}/>\r\n                <Route path={PATH.CARDS} render={() => <Cards/>}/>\r\n                <Route path={`${PATH.LEARN}/:token`} render={() => <Learn/>}/>\r\n                <Route path={PATH.LEARN} render={() => <Learn/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import style from './ErrorSnackBar.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../../m2-bll/app-reduser\";\r\n\r\ntype ErrorSnackBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nexport const ErrorSnackBar = (props: ErrorSnackBarPropsType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickHandler = () => dispatch(setAppErrorAC(null))\r\n\r\n    return (\r\n        <div className={style.notification}>\r\n        <div className={style.text}> {props.errorMessage} </div>\r\n        <div className={`${style.close}`}>\r\n            <div className={style.text} onClick={onClickHandler}>X</div>\r\n        </div>\r\n    </div>)\r\n};\r\n\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./AuthorizedNav.module.css\"\r\nimport {PATH} from \"../../routes/Routes\";\r\n\r\ntype AuthorizedNavPropsType = {\r\n    burgerNav?: boolean\r\n}\r\nexport const NotAuthorizedNav = (props: AuthorizedNavPropsType) => {\r\n\r\n    return (\r\n        <div className={props.burgerNav ? s.burger : s.NANav}>\r\n           <span>\r\n                <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}>LOGIN</NavLink>\r\n            </span>\r\n            <span>\r\n                <NavLink to={PATH.REGISTER} activeClassName={s.activeLink}>REGISTER</NavLink>\r\n            </span>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./AuthorizedNav.module.css\"\r\nimport {PATH} from \"../../routes/Routes\";\r\ntype AuthorizedNavPropsType ={\r\n    burgerNav?:boolean\r\n}\r\nexport const    AuthorizedNav = (props:AuthorizedNavPropsType) => {\r\n\r\n    return (\r\n        <div className={props.burgerNav? s.burger:s.nav}>\r\n\r\n            <span>\r\n                <NavLink to={PATH.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n            </span>\r\n            <span>\r\n                <NavLink to={PATH.PACK} activeClassName={s.activeLink}>PACKS</NavLink>\r\n            </span>\r\n            <span>\r\n                <NavLink to={PATH.CARDS} activeClassName={s.activeLink}>CARDS</NavLink>\r\n            </span>\r\n            <span>\r\n                <NavLink to={PATH.LEARN} activeClassName={s.activeLink}>LEARN</NavLink>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./nav.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {logout} from \"../../../../n2-features/f1-auth/auth-reducer\";\r\nimport {NotAuthorizedNav} from \"../authorizedNav/NotAuthorizedNav\";\r\nimport {AuthorizedNav} from \"../authorizedNav/AuthorizedNav\";\r\n\r\nexport const Nav = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const UserName = useSelector<AppRootStateType, string | null>(state => state.app.UserData ? state.app.UserData.name : null)\r\n    const logoutOnClick = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n\r\n        <div className={s.nav}>\r\n\r\n            {!isLoggedIn && <NotAuthorizedNav/>}\r\n            {isLoggedIn && <> <AuthorizedNav/>\r\n                <span> < SuperButton onClick={logoutOnClick} name=\"Logout\"/> </span>\r\n                <span className={s.userName}> {UserName} </span>\r\n            </>}\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport s from \"./burgerNav.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {logout} from \"../../../../n2-features/f1-auth/auth-reducer\";\r\nimport {AuthorizedNav} from \"../authorizedNav/AuthorizedNav\";\r\nimport {NotAuthorizedNav} from \"../authorizedNav/NotAuthorizedNav\";\r\nimport {RequestStatusType} from \"../../../m2-bll/app-reduser\";\r\n\r\n\r\nexport const BurgerNav = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoading = status === 'loading'\r\n    const logoutOnClick = () => {\r\n        dispatch(logout())\r\n    }\r\n    let [menuIsOpen, setMenuIsOpen] = useState(false)\r\n    const setMenu = () => setMenuIsOpen(!menuIsOpen)\r\n    const btnName = menuIsOpen ? \"Close\" : \"Menu\"\r\n\r\n    return ( <div  className={s.burgerNav}>\r\n       {isLoggedIn &&\r\n            < SuperButton disabled={isLoading} onClick={logoutOnClick} name=\"logout\"/>\r\n            }\r\n\r\n            {menuIsOpen && <div className={s.nav}>\r\n                {!isLoggedIn && <NotAuthorizedNav burgerNav={true}/>}\r\n                {isLoggedIn && <AuthorizedNav burgerNav={true}/>}\r\n            </div>}\r\n\r\n            <div className={s.positionBtn}>\r\n                <SuperButton  name={btnName} onClick={setMenu}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./Header.module.css\"\r\nimport {Nav} from \"./nav/nav\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faDAndD} from \"@fortawesome/free-brands-svg-icons\"\r\nimport {BurgerNav} from \"./burgerNav/burgerNav\";\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    return (\r\n        <div className={s.header}>\r\n\r\n            <FontAwesomeIcon icon={faDAndD} size=\"4x\"/>\r\n            <Nav/>\r\n            <BurgerNav/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from \"../m2-bll/store\";\r\nimport {RequestStatusType} from \"../m2-bll/app-reduser\";\r\nimport Preloader from \"./common/Preloder/Preloader\";\r\nimport {Routes} from \"./routes/Routes\";\r\nimport {ErrorSnackBar} from \"./common/ErrorSnackBar/ErrorSnackBar\";\r\nimport {Header} from \"./header/Header\";\r\n\r\nimport {getMe, setIsLoggedIn} from \"../../n2-features/f1-auth/auth-reducer\";\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error)\r\n    let [firstRendering, setFirstRendering] = useState<boolean>(true)\r\n\r\n    useEffect(() => {\r\n        if (firstRendering) {\r\n            dispatch(setIsLoggedIn(false))\r\n            dispatch(getMe())\r\n\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Header/>\r\n                {status === 'loading' && <Preloader/>}\r\n                <Routes/>\r\n                {error && <ErrorSnackBar errorMessage={error}/>}\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {packsReducer} from \"../../n2-features/f5-packs/Packs-reduser\";\r\nimport {appReducer} from \"./app-reduser\";\r\nimport {cardsReducer} from \"../../n2-features/f6-cards/Cards-reducer\";\r\nimport {authReducer} from \"../../n2-features/f1-auth/auth-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    app:appReducer,\r\n    packs:packsReducer,\r\n    cards: cardsReducer\r\n\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './n1-main/m1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}