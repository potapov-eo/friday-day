{"version":3,"sources":["n1-main/m1-ui/header/nav/nav.module.css","n1-main/m1-ui/common/ErrorSnackBar/ErrorSnackBar.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/common/SuperInput/SuperInput.module.css","n1-main/m1-ui/common/Preloder/Preloader.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/Preloder/Preloader.tsx","n2-features/f4-404/Error404.tsx","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/common/SuperInput/SuperInput.tsx","n1-main/m3-dal/instance.ts","n1-main/m2-bll/app-reduser.ts","n2-features/f1-auth/a1-login/login-reducer.ts","n2-features/f0-test/test.tsx","n2-features/f1-auth/a1-login/LoginFormik.tsx","n2-features/f1-auth/a2-register/register-reducer.ts","n2-features/f1-auth/a2-register/Register.tsx","n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword.tsx","n2-features/f1-auth/a4-newPassword/NewPassword.tsx","n2-features/f2-profile/Profile.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/common/ErrorSnackBar/ErrorSnackBar.tsx","n1-main/m1-ui/header/nav/nav.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer.ts","n2-features/f1-auth/a4-newPassword/newPassword-reducer.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Preloader","className","style","pre","src","height","Error404","alt","SuperButton","name","restProps","s","button","SuperInput","input","instance","axios","create","baseURL","withCredentials","AuthAPI","post","email","password","rememberMe","delete","RegisterAPI","data","initialState","status","error","UserData","_id","avatar","publicCardPacksCount","created","updated","isAdmin","verified","isLoggedIn","setAppStatusAC","type","setAppErrorAC","setUserData","setIsLoggedIn","value","getMe","dispatch","a","response","message","Test","useDispatch","useSelector","state","app","useEffect","Login","disable","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","mail","remember_Me","thunk","resetForm","to","PATH","PROFILE","handleSubmit","onChange","handleChange","onBlur","handleBlur","placeholder","touched","color","checked","disabled","isRegister","Register","register","password2","length","LOGIN","RecoveryPassword","NewPassword","Profile","userData","HOME","TEST","REGISTER","RECOVERY_PASSWORD","NEW_PASSWORD","Routes","path","exact","render","ErrorSnackBar","props","notification","text","errorMessage","close","onClick","Nav","nav","activeClassName","activeLink","Header","UserName","header","margin","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","login","action","recoveryPassword","newPassword","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a0f9e91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__1K_HG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__N4HPG\",\"text\":\"ErrorSnackBar_text__2glv8\",\"close\":\"ErrorSnackBar_close__1paLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__1JisP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInput_input__1p_BM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre\":\"Preloader_pre__3-i-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__P8m-Z\"};","import React from 'react';\r\nimport style from './Preloader.module.css'\r\n\r\n\r\nlet Preloader = () => {\r\n    return <div className={style.pre} >\r\n        <img src=\"https://media.giphy.com/media/wnYB3vx9t6PXiq1ubB/giphy.gif\"  style={ { height: 200 } }/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react'\n\n\nexport const Error404 = () => {\n    return (\n        <div className=\"App\">\n            <div>404</div>\n            <img src=\"https://programmist1s.ru/wp-content/uploads/2013/09/Pole-ob'ekta-nedostupno-dlya-zapisi-1S.jpg\"\n                 alt=\"404\"/>\n            <div>Page not found!</div>\n        </div>\n    )\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\nimport './SuperButton.module.css'\n\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n\n    name?:string\n\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        name=\"push\",\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n\n\n    return (\n        <button className={s.button}\n                {...restProps}\n            //  {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        >{name} </button>\n    );\n}\n\nexport default SuperButton;\n","import React, { DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\nimport './SuperInput.module.css'\r\n\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\nname?:string\r\n}\r\n\r\nconst SuperInput: React.FC<SuperButtonPropsType> = (\r\n    {\r\n      \r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n\r\n    return (\r\n        <input {...restProps} className={s.input}\r\n            />\r\n    );\r\n}\r\n\r\nexport default SuperInput;\r\n","import axios from \"axios\";\r\nimport {DEV_VERSION} from \"../../config\";\r\nimport {RegisterParamsType} from \"../../n2-features/f1-auth/a2-register/register-reducer\";\r\n\r\nexport const baseURL = !DEV_VERSION\r\n    ? \"http://localhost:7542/2.0\"\r\n    : \"https://neko-back.herokuapp.com/2.0\"\r\nexport const instance = axios.create({baseURL, withCredentials: true,})\r\n\r\n\r\nexport const AuthAPI = {\r\n    getAuthMe () {\r\n        return instance.post(`auth/me`)\r\n    },\r\n    login (email: string, password:string, rememberMe: boolean) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/me`)\r\n    }\r\n}\r\n\r\n\r\nexport const RegisterAPI = {\r\n    register(data:RegisterParamsType){\r\n        return instance.post(\"/auth/register\" , data)\r\n    }\r\n}","import {setIsLoggedIn, setUserData} from \"../../n2-features/f1-auth/a1-login/login-reducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport type UserDataType = {\r\n    _id: string | null\r\n    email: string | null,\r\n    name: string | null,\r\n    avatar: string | null,\r\n    publicCardPacksCount: number | null,\r\n    created: Date | null,\r\n    updated: Date | null,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n}\r\nexport type AppInitialStateType = {\r\n    error: string | null\r\n    status: RequestStatusType\r\n    UserData: UserDataType\r\n    isLoggedIn: boolean\r\n\r\n\r\n}\r\nconst initialState: AppInitialStateType = {\r\n    status: 'succeeded',\r\n    error: null,\r\n    UserData: {\r\n        _id: null as string | null,\r\n        email: null as string | null,\r\n        name: null as string | null,\r\n        avatar: null as string | null,\r\n        publicCardPacksCount: null as number | null,\r\n        created: null as Date | null,\r\n        updated: null as Date | null,\r\n        isAdmin: false,\r\n        verified: false, // подтвердил ли почту\r\n        rememberMe: false,\r\n    },\r\n    isLoggedIn: false\r\n\r\n}\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: ActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...(state), status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...(state), error: action.error}\r\n        case \"SET_USER_DATA\":\r\n            return {...state,UserData:action.data}\r\n        case \"SET_ISLOGGEDIN\":\r\n            return {...state, isLoggedIn: action.value}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAppStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'APP/SET-ERROR', error} as const)\r\n\r\n\r\nexport type setAppStatusACType = ReturnType<typeof setAppStatusAC>\r\nexport type setAppErrorACType = ReturnType<typeof setAppErrorAC>\r\n\r\ntype ActionsType =\r\n    setAppStatusACType\r\n    | setAppErrorACType\r\n    | ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setIsLoggedIn>","import {Dispatch} from 'redux'\r\nimport {AuthAPI} from '../../../n1-main/m3-dal/instance'\r\nimport {setAppErrorAC, setAppStatusAC} from \"../../../n1-main/m2-bll/app-reduser\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst SET_ISLOGGEDIN = 'SET_ISLOGGEDIN'\r\n\r\nconst initialState = {}\r\n\r\nexport const loginReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setUserData = (_id: string | null, email: string | null, name: string | null, avatar: string | null, publicCardPacksCount: number | null,\r\n                            created: Date | null, updated: Date | null, isAdmin: boolean, verified: boolean, rememberMe: false,) =>\r\n    ({\r\n        type: SET_USER_DATA, data: {\r\n            _id, email, name, avatar, publicCardPacksCount, created, updated, isAdmin, verified, rememberMe\r\n\r\n        }\r\n    } as const)\r\n\r\nexport const setIsLoggedIn = (value: boolean) => ({type: SET_ISLOGGEDIN, value} as const)\r\n\r\n//TC\r\n\r\nexport const getMe = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        let response = await AuthAPI.getAuthMe()\r\n\r\n        let {\r\n            _id, email, name, avatar, publicCardPacksCount, created, updated, isAdmin, verified,\r\n            rememberMe\r\n        } = response.data\r\n        dispatch(setUserData(_id, email, name, avatar, publicCardPacksCount, created, updated, isAdmin, verified, rememberMe\r\n        ))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n        dispatch(setIsLoggedIn(true))\r\n\r\n\r\n    } catch (e) {\r\n        dispatch(setAppStatusAC('failed'))\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        dispatch(setAppErrorAC(error))\r\n    }\r\n}\r\n\r\nexport const login = (mail: string, password: string, remember_Me: boolean) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            let response = await AuthAPI.login(mail, password, remember_Me)\r\n            let {\r\n                _id, email, name, avatar, publicCardPacksCount, created, updated, isAdmin, verified, rememberMe\r\n            } = response.data\r\n            dispatch(setUserData(_id, email, name, avatar, publicCardPacksCount, created, updated, isAdmin, verified, rememberMe\r\n            ))\r\n            dispatch(setIsLoggedIn(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setAppErrorAC(null))\r\n\r\n        } catch (e) {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC(error))\r\n        }\r\n    }\r\n\r\nexport const logout = () =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            dispatch(setAppStatusAC('loading'))\r\n            await AuthAPI.logout()\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setIsLoggedIn(false))\r\n            dispatch(setUserData(null, null, null, null, null, null, null, false, false, false))\r\n            dispatch(setAppErrorAC(null))\r\n        } catch (e) {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC(error))\r\n        }\r\n\r\n    }\r\n\r\n//types\r\ntype ActionsType = | ReturnType<typeof setUserData> | ReturnType<typeof setIsLoggedIn>\r\ntype InitialStateType = typeof initialState\r\n","import React, {useEffect} from 'react'\r\nimport SuperButton from \"../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\nimport {Error404} from \"../f4-404/Error404\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {getMe} from \"../f1-auth/a1-login/login-reducer\";\r\n\r\n\r\nexport const Test = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            dispatch(getMe())\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <SuperButton/>\r\n            <SuperButton name={\"xxx\"}/>\r\n            <SuperInput type=\"text\"/>\r\n            <Error404/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport SuperInput from '../../../n1-main/m1-ui/common/SuperInput/SuperInput';\r\nimport SuperButton from '../../../n1-main/m1-ui/common/SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {login} from './login-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useFormik} from 'formik';\r\nimport {AppRootStateType} from '../../../../src/n1-main/m2-bll/store'\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport {RequestStatusType, setAppErrorAC} from \"../../../n1-main/m2-bll/app-reduser\";\r\n\r\n\r\nexport const Login = () => {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const disable = status === 'loading'\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"nya-admin@nya.nya\",\r\n            password: \"1qazxcvBG\",\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Required\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            const thunk = login(values.email, values.password, values.rememberMe)\r\n            dispatch(thunk)\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        dispatch(setAppErrorAC(\"you are already logged in\"))\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            LOGIN\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div><SuperInput name=\"email\" onChange={formik.handleChange} onBlur={formik.handleBlur} type=\"text\"\r\n                                 value={formik.values.email} placeholder={\"Email\"}/></div>\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.email} </div> : null}\r\n                <div><SuperInput name=\"password\" onChange={formik.handleChange} onBlur={formik.handleBlur}\r\n                                 type=\"password\" value={formik.values.password} placeholder={\"Password\"}/></div>\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div style={{color: \"red\"}}> {formik.errors.password} </div> : null}\r\n                <div><span>Remember me </span><SuperInput name=\"rememberMe\" onChange={formik.handleChange}\r\n                                                          checked={formik.values.rememberMe} type=\"checkbox\"/></div>\r\n                <div><SuperButton disabled={disable} name=\"login\"/></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n","import {RegisterAPI} from \"../../../n1-main/m3-dal/instance\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    setAppErrorAC,\r\n    setAppErrorACType,\r\n    setAppStatusAC,\r\n    setAppStatusACType\r\n} from \"../../../n1-main/m2-bll/app-reduser\";\r\n\r\n\r\nconst initialState = {\r\n    isRegister: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-IS-REGISTER':\r\n            return {...state, isRegister: action.value}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setIsRegister = (value: boolean) => ({type: 'SET-IS-REGISTER', value} as const)\r\n\r\nexport const RegisterTC = (data: RegisterParamsType) => async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        await RegisterAPI.register(data)\r\n        dispatch(setIsRegister(true))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n        dispatch(setAppErrorAC(null))\r\n    } catch (e) {\r\n        dispatch(setAppStatusAC('failed'))\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n\r\n        dispatch(setAppErrorAC(error))\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport type RegisterParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setIsRegister> | setAppStatusACType | setAppErrorACType\r\n\r\n","import React from 'react'\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RegisterTC} from \"./register-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {PATH} from \"../../../n1-main/m1-ui/routes/Routes\";\r\nimport {RequestStatusType, setAppErrorAC} from \"../../../n1-main/m2-bll/app-reduser\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/SuperButton/SuperButton\";\r\nimport SuperInput from \"../../../n1-main/m1-ui/common/SuperInput/SuperInput\";\r\n\r\nexport const Register = () => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n    const isRegister = useSelector<AppRootStateType, boolean>(state => state.register.isRegister)\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n    }\r\n    const disable = status === 'loading'\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'potapov.eo@yandex.ru',\r\n            password: 'jekajeka',\r\n            password2: 'jekajeka',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'email Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'password Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Invalid email address';\r\n            } else if (values.password2 !== values.password) {\r\n                errors.password = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n\r\n        onSubmit: values => {\r\n\r\n            /*dispatch(RegisterTC(values))*/\r\n            dispatch(RegisterTC({email: values.email, password: values.password}))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        dispatch(setAppErrorAC(\"you are already logged in\"))\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    if (isRegister) {\r\n\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return <div className=\"App\">\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n            REGISTRATION\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"email\"}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.touched.email && formik.errors.email ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n            </div>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"password\"}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperInput\r\n                    placeholder={\"password2\"}\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password2}\r\n                />\r\n                {formik.touched.password && formik.errors.password ?\r\n                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n            </div>\r\n            <SuperButton disabled={disable} type=\"submit\"/>\r\n\r\n        </form>\r\n\r\n\r\n    </div>\r\n}","import React from 'react'\n\n\nexport const RecoveryPassword = () => {\n    return (\n        <div className=\"App\">\n            RecoveryPassword\n        </div>\n    )\n}","import React from 'react'\n\n\nexport const NewPassword = () => {\n    return (\n        <div className=\"App\">\n            NewPassword\n        </div>\n    )\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMe} from \"../f1-auth/a1-login/login-reducer\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../n1-main/m1-ui/routes/Routes\";\r\nimport {UserDataType} from \"../../n1-main/m2-bll/app-reduser\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n    const userData = useSelector<AppRootStateType, UserDataType>(state => state.app.UserData)\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            dispatch(getMe())\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n            PROFILE\r\n            <div>{`User Name : ${userData.name}`}</div>\r\n            <div>{`User email : ${userData.email}`}</div>\r\n            <div>{`User id : ${userData._id}`}</div>\r\n            <div>{`public Card Packs Count : ${userData.publicCardPacksCount}`}</div>\r\n            <div>{`avatar : ${userData.avatar}`}</div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Error404} from \"../../../n2-features/f4-404/Error404\";\r\nimport {Test} from \"../../../n2-features/f0-test/test\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/LoginFormik\";\r\nimport {Register} from \"../../../n2-features/f1-auth/a2-register/Register\";\r\nimport {RecoveryPassword} from \"../../../n2-features/f1-auth/a3-recoveryPassword/RecoveryPassword\";\r\nimport {NewPassword} from \"../../../n2-features/f1-auth/a4-newPassword/NewPassword\";\r\nimport {Profile} from \"../../../n2-features/f2-profile/Profile\";\r\n\r\nexport const PATH = {\r\n    HOME: \"/home\",\r\n    TEST: \"/test\",\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    RECOVERY_PASSWORD: \"/recovery-password\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    PROFILE: \"/profile\",\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n\r\n            <Switch>\r\n\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTER} render={() => <Register/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPassword/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import style from './ErrorSnackBar.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../../m2-bll/app-reduser\";\r\n\r\ntype ErrorSnackBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nexport const ErrorSnackBar = (props: ErrorSnackBarPropsType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickHandler = () => dispatch(setAppErrorAC(null))\r\n\r\n    return (\r\n        <div className={style.notification}>\r\n        <div className={style.text}> {props.errorMessage} </div>\r\n        <div className={`${style.close}`}>\r\n            <div className={style.text} onClick={onClickHandler}>X</div>\r\n        </div>\r\n    </div>)\r\n};\r\n\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./nav.module.css\"\r\nimport {PATH} from \"../../routes/Routes\";\r\n\r\nexport const Nav = () => {\r\n    return (\r\n\r\n        <div className={s.nav}>\r\n\r\n\r\n            <span>\r\n                    <NavLink to={PATH.TEST} activeClassName={s.activeLink}>TEST</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}>LOGIN</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.REGISTER} activeClassName={s.activeLink}>REGISTER</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.RECOVERY_PASSWORD} activeClassName={s.activeLink}>RECOVERY_PASSWORD</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.NEW_PASSWORD} activeClassName={s.activeLink}>NEW_PASSWORD</NavLink>\r\n                </span>\r\n            <span>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n                </span>\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\nimport s from \"./Header.module.css\"\r\nimport {Nav} from \"./nav/nav\";\r\nimport SuperButton from '../../../n1-main/m1-ui/common/SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logout} from '../../../n2-features/f1-auth/a1-login/login-reducer'\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch()\r\n    const UserName = useSelector<AppRootStateType, string | null>(state => state.app.UserData.name)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.app.isLoggedIn)\r\n\r\n    const logoutOnClick = () => {\r\n        const thunk = logout()\r\n        dispatch(thunk)\r\n    }\r\n    return (\r\n        <div className={s.header}>\r\n            <Nav/>\r\n            {isLoggedIn && < SuperButton onClick={logoutOnClick} name=\"logout\"/>}\r\n            {isLoggedIn && <div style={{margin: \"10px\", color: \"red\"}}> YOUR NAME : {UserName} </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from \"../m2-bll/store\";\r\nimport {RequestStatusType} from \"../m2-bll/app-reduser\";\r\nimport Preloader from \"./common/Preloder/Preloader\";\r\nimport {Routes} from \"./routes/Routes\";\r\nimport {ErrorSnackBar} from \"./common/ErrorSnackBar/ErrorSnackBar\";\r\nimport {Header} from \"./header/Header\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Header/>\r\n                {status === 'loading' && <Preloader/>}\r\n                <Routes/>\r\n                {error && <ErrorSnackBar errorMessage={error}/>}\r\n            </HashRouter>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Dispatch} from 'redux'\n\n\nconst initialState = {\n\n}\ntype InitialStateType = typeof initialState\n\nexport const recoveryPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action) {\n        case 'SOME_ACTION':\n\n        default:\n            return state\n    }\n}\n\n\ntype ActionsType = {}","import {Dispatch} from 'redux'\n\n\nconst initialState = {\n\n}\ntype InitialStateType = typeof initialState\n\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action) {\n        case 'SOME_ACTION':\n\n        default:\n            return state\n    }\n}\n\n\ntype ActionsType = {}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {loginReducer} from \"../../n2-features/f1-auth/a1-login/login-reducer\";\r\nimport {registerReducer} from \"../../n2-features/f1-auth/a2-register/register-reducer\";\r\nimport {recoveryPasswordReducer} from \"../../n2-features/f1-auth/a3-recoveryPassword/recoveryPassword-reducer\";\r\nimport {newPasswordReducer} from \"../../n2-features/f1-auth/a4-newPassword/newPassword-reducer\";\r\nimport {appReducer} from \"./app-reduser\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login:loginReducer,\r\n    register:registerReducer,\r\n    recoveryPassword:recoveryPasswordReducer,\r\n    newPassword:newPasswordReducer,\r\n    app:appReducer\r\n\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './n1-main/m1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}